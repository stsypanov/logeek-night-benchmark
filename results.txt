25.10.2017

JDK 8 / JRE 8

Benchmark                                       								Mode  Cnt    Score     Error   Units
MergeBenchmark.measureModifyCallingSave         								avgt  500  150,972 	 ± 2,859   us/op
MergeBenchmark.measureModifyWithoutCallingSave  								avgt  500  139,684 	 ± 1,320   us/op

MergeBenchmark.measureModifyCallingSave:·gc.alloc.rate.norm                     avgt  500  45530,392 ± 20,149  B/op
MergeBenchmark.measureModifyWithoutCallingSave:·gc.alloc.rate.norm              avgt  500  43245,317 ± 13,598  B/op

JDK 8 / JRE 8

-f 10 -wi 20 -m 50

Benchmark                                          (count)  Mode  Cnt     Score    Error  Units
ArrayCopyBenchmark.measureArraysCopyOf                   1  avgt  500    10,609 ±  0,107  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForEach        1  avgt  500    18,774 ±  0,115  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForI           1  avgt  500    18,828 ±  0,131  ns/op
ArrayCopyBenchmark.measureClone                          1  avgt  500    11,342 ±  0,088  ns/op

ArrayCopyBenchmark.measureArraysCopyOf                   5  avgt  500    10,767 ±  0,095  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForEach        5  avgt  500    23,968 ±  0,155  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForI           5  avgt  500    22,832 ±  0,133  ns/op
ArrayCopyBenchmark.measureClone                          5  avgt  500    11,277 ±  0,088  ns/op

ArrayCopyBenchmark.measureArraysCopyOf                  10  avgt  500    11,974 ±  0,182  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForEach       10  avgt  500    25,223 ±  0,175  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForI          10  avgt  500    24,131 ±  0,173  ns/op
ArrayCopyBenchmark.measureClone                         10  avgt  500    12,142 ±  0,098  ns/op

ArrayCopyBenchmark.measureArraysCopyOf                  20  avgt  500    14,316 ±  0,708  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForEach       20  avgt  500    26,220 ±  0,176  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForI          20  avgt  500    25,691 ±  0,176  ns/op
ArrayCopyBenchmark.measureClone                         20  avgt  500    13,041 ±  0,117  ns/op

ArrayCopyBenchmark.measureArraysCopyOf                  50  avgt  500    19,393 ±  0,154  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForEach       50  avgt  500    33,719 ±  0,256  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForI          50  avgt  500    34,939 ±  0,279  ns/op
ArrayCopyBenchmark.measureClone                         50  avgt  500    17,747 ±  0,125  ns/op

ArrayCopyBenchmark.measureArraysCopyOf                 100  avgt  500    32,051 ±  0,223  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForEach      100  avgt  500    38,919 ±  0,337  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForI         100  avgt  500    41,394 ±  0,328  ns/op
ArrayCopyBenchmark.measureClone                        100  avgt  500    29,454 ±  0,149  ns/op

ArrayCopyBenchmark.measureArraysCopyOfWithForEach     1000  avgt  500   273,581 ±  1,805  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForI        1000  avgt  500   273,114 ±  1,772  ns/op
ArrayCopyBenchmark.measureArraysCopyOf                1000  avgt  500   255,063 ±  4,361  ns/op
ArrayCopyBenchmark.measureClone                       1000  avgt  500   253,063 ±  2,115  ns/op

ArrayCopyBenchmark.measureArraysCopyOf               10000  avgt  500  2455,143 ± 13,380  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForEach    10000  avgt  500  1891,878 ± 14,537  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForI       10000  avgt  500  1888,779 ± 13,804  ns/op
ArrayCopyBenchmark.measureClone                      10000  avgt  500  2480,795 ± 15,583  ns/op


-------------------------------------------------------------------------------------------------------------


JDK 8 / JRE 9

-f 10 -wi 20 -m 50

Benchmark                                          (count)  Mode  Cnt     Score    Error  Units
ArrayCopyBenchmark.measureArraysCopyOf                   1  avgt  500    11,166 ±  0,224  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForEach        1  avgt  500    12,671 ±  1,516  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForI           1  avgt  500     9,074 ±  0,106  ns/op
ArrayCopyBenchmark.measureClone                          1  avgt  500    11,601 ±  0,099  ns/op

ArrayCopyBenchmark.measureArraysCopyOf                   5  avgt  500    10,876 ±  0,207  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForEach        5  avgt  500    13,592 ±  0,269  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForI           5  avgt  500    12,439 ±  0,126  ns/op
ArrayCopyBenchmark.measureClone                          5  avgt  500    11,734 ±  0,113  ns/op

ArrayCopyBenchmark.measureArraysCopyOf                  10  avgt  500    11,844 ±  0,126  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForEach       10  avgt  500    14,695 ±  0,185  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForI          10  avgt  500    14,418 ±  0,159  ns/op
ArrayCopyBenchmark.measureClone                         10  avgt  500    12,421 ±  0,107  ns/op

ArrayCopyBenchmark.measureArraysCopyOf                  20  avgt  500    13,419 ±  0,451  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForEach       20  avgt  500    19,882 ±  0,403  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForI          20  avgt  500    18,855 ±  0,172  ns/op
ArrayCopyBenchmark.measureClone                         20  avgt  500    13,237 ±  0,108  ns/op

ArrayCopyBenchmark.measureArraysCopyOf                  50  avgt  500    20,792 ±  0,560  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForEach       50  avgt  500    34,059 ±  0,948  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForI          50  avgt  500    29,314 ±  0,251  ns/op
ArrayCopyBenchmark.measureClone                         50  avgt  500    18,576 ±  0,142  ns/op

ArrayCopyBenchmark.measureArraysCopyOf                 100  avgt  500    33,330 ±  0,848  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForEach      100  avgt  500    43,862 ±  0,394  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForI         100  avgt  500    42,662 ±  0,338  ns/op
ArrayCopyBenchmark.measureClone                        100  avgt  500    30,661 ±  0,157  ns/op

ArrayCopyBenchmark.measureArraysCopyOf                1000  avgt  500   299,060 ± 10,566  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForEach     1000  avgt  500   275,257 ±  4,603  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForI        1000  avgt  500   261,016 ±  1,976  ns/op
ArrayCopyBenchmark.measureClone                       1000  avgt  500   256,199 ±  1,160  ns/op

ArrayCopyBenchmark.measureArraysCopyOf               10000  avgt  500  2939,384 ± 73,870  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForEach    10000  avgt  500  1512,567 ± 34,683  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForI       10000  avgt  500  1419,036 ± 13,950  ns/op
ArrayCopyBenchmark.measureClone                      10000  avgt  500  2564,621 ± 15,126  ns/op

-------------------------------------------------------------------------------------------------------------

27.10.2017

JDK 8 / JRE 9

-f 10 -wi 20 -m 50

Benchmark                                                     (collectionType)  (size)  Mode  Cnt      Score     Error  Units
IteratorFromStreamBenchmark.measureForEach                                list      10  avgt  500    397,899 ±   3,742  ns/op
IteratorFromStreamBenchmark.measureIteratorFromStream                     list      10  avgt  500    618,878 ±   6,864  ns/op
IteratorFromStreamBenchmark.measureIteratorFromCollectedList              list      10  avgt  500    479,987 ±   6,310  ns/op

IteratorFromStreamBenchmark.measureForEach                                list     100  avgt  500   3333,892 ±  33,167  ns/op
IteratorFromStreamBenchmark.measureIteratorFromStream                     list     100  avgt  500   5819,927 ± 160,011  ns/op
IteratorFromStreamBenchmark.measureIteratorFromCollectedList              list     100  avgt  500   4123,159 ±  57,694  ns/op

IteratorFromStreamBenchmark.measureForEach                                list    1000  avgt  500  35905,929 ± 358,069  ns/op
IteratorFromStreamBenchmark.measureIteratorFromStream                     list    1000  avgt  500  54665,916 ± 877,024  ns/op
IteratorFromStreamBenchmark.measureIteratorFromCollectedList              list    1000  avgt  500  45274,905 ± 927,043  ns/op

IteratorFromStreamBenchmark.measureForEach                                 set      10  avgt  500    492,351 ±  26,488  ns/op
IteratorFromStreamBenchmark.measureIteratorFromStream                      set      10  avgt  500    714,031 ±  11,948  ns/op
IteratorFromStreamBenchmark.measureIteratorFromCollectedList               set      10  avgt  500    556,542 ±   5,880  ns/op

IteratorFromStreamBenchmark.measureForEach                                 set     100  avgt  500   4555,108 ±  61,825  ns/op
IteratorFromStreamBenchmark.measureIteratorFromStream                      set     100  avgt  500   6156,478 ±  71,377  ns/op
IteratorFromStreamBenchmark.measureIteratorFromCollectedList               set     100  avgt  500   4860,118 ±  54,824  ns/op

IteratorFromStreamBenchmark.measureForEach                                 set    1000  avgt  500  54001,405 ± 955,434  ns/op
IteratorFromStreamBenchmark.measureIteratorFromStream                      set    1000  avgt  500  71602,788 ± 805,289  ns/op
IteratorFromStreamBenchmark.measureIteratorFromCollectedList               set    1000  avgt  500  57125,771 ± 586,272  ns/op

-------------------------------------------------------------------------------------------------------------

27.10.2017

JDK 8 / JRE 8

-f 10 -wi 20 -m 50

Benchmark                                             (count)  Mode  Cnt      Score     Error  Units
SetAddAllBenchmark.measureAddAllViaMethod                  10  avgt  500    230,978 ±   2,528  ns/op
SetAddAllBenchmark.measureAddAllViaUtilsAddAll             10  avgt  500    157,242 ±   2,069  ns/op
SetAddAllBenchmark.measureAddAllViaCollectionsAddAll       10  avgt  500    141,383 ±   2,125  ns/op

SetAddAllBenchmark.measureAddAllViaMethod                 100  avgt  500   2515,255 ±  22,154  ns/op
SetAddAllBenchmark.measureAddAllViaUtilsAddAll            100  avgt  500   1917,693 ±  20,533  ns/op
SetAddAllBenchmark.measureAddAllViaCollectionsAddAll      100  avgt  500   1837,411 ±  22,111  ns/op

SetAddAllBenchmark.measureAddAllViaMethod                1000  avgt  500  23647,743 ± 208,480  ns/op
SetAddAllBenchmark.measureAddAllViaUtilsAddAll           1000  avgt  500  17434,137 ± 256,017  ns/op
SetAddAllBenchmark.measureAddAllViaCollectionsAddAll     1000  avgt  500  17283,939 ± 181,051  ns/op

Каждый метод выполняется как отдельный БМ:

Benchmark                                             (count)  Mode  Cnt      Score     Error  Units
SetAddAllBenchmark.measureAddAllViaMethod                  10  avgt  500    282,224 ±   7,747  ns/op
SetAddAllBenchmark.measureAddAllViaMethod                 100  avgt  500   2973,791 ±  37,126  ns/op
SetAddAllBenchmark.measureAddAllViaMethod                1000  avgt  500  29377,079 ± 356,668  ns/op

Benchmark                                             (count)  Mode  Cnt      Score     Error  Units
SetAddAllBenchmark.measureAddAllViaCollectionsAddAll       10  avgt  500    172,077 ±   2,957  ns/op
SetAddAllBenchmark.measureAddAllViaCollectionsAddAll      100  avgt  500   1996,182 ±  18,654  ns/op
SetAddAllBenchmark.measureAddAllViaCollectionsAddAll     1000  avgt  500  18015,272 ± 156,627  ns/op

Benchmark                                             (count)  Mode  Cnt      Score     Error  Units
SetAddAllBenchmark.measureAddAllViaUtilsAddAll             10  avgt  500    177,535 ±   1,748  ns/op
SetAddAllBenchmark.measureAddAllViaUtilsAddAll            100  avgt  500   2115,596 ±  21,019  ns/op
SetAddAllBenchmark.measureAddAllViaUtilsAddAll           1000  avgt  500  18983,598 ± 183,482  ns/op

-------------------------------------------------------------------------------------------------------------

28.10.2017

JDK 8 / JRE 8

Дочерних сущностей нет. Каждый метод выполняется как отдельный БМ:

Benchmark                                                                 Mode  Cnt      Score       Error   Units
MergeBenchmark.measureModifyCallingSave                                   avgt   75    218,158 ±     7,144   us/op
MergeBenchmark.measureModifyCallingSave:·gc.alloc.rate.norm               avgt   75  56390,906 ±    40,427    B/op

Benchmark                                                                 Mode  Cnt      Score       Error   Units
MergeBenchmark.measureModifyWithoutCallingSave                            avgt   75    194,664 ±     6,843   us/op
MergeBenchmark.measureModifyWithoutCallingSave:·gc.alloc.rate.norm        avgt   75  53909,289 ±    42,828    B/op

Есть дочерняя сущность (@ManyToOne). Выполняем всё вместе:

-f 10 -wi 25 -m 100

Benchmark                                                                 Mode  Cnt      Score       Error   Units
MergeBenchmark.measureModifyCallingSave                                   avgt  1000    169,879 ±    0,799   us/op
MergeBenchmark.measureModifyCallingSave:·gc.alloc.rate.norm               avgt  1000  56310,147 ±   15,525    B/op

MergeBenchmark.measureModifyWithoutCallingSave                            avgt  1000    157,791 ±    0,367   us/op
MergeBenchmark.measureModifyWithoutCallingSave:·gc.alloc.rate.norm        avgt  1000  53843,984 ±    7,365    B/op

Есть дочерняя сущность (@ManyToOne). Каждый метод выполняется как отдельный БМ:

-f 10 -wi 25 -m 100

Benchmark                                                                 Mode   Cnt      Score      Error   Units
MergeBenchmark.measureModifyCallingSave                                   avgt  1000    192,661 ±    6,563   us/op
MergeBenchmark.measureModifyCallingSave:·gc.alloc.rate.norm               avgt  1000  56405,205 ±   15,219    B/op

Benchmark                                                                 Mode   Cnt      Score      Error   Units
MergeBenchmark.measureModifyWithoutCallingSave                            avgt  1000    166,671 ±    1,645   us/op
MergeBenchmark.measureModifyWithoutCallingSave:·gc.alloc.rate.norm        avgt  1000  53950,038 ±    9,270    B/op



Single entity (no associated entities)

Benchmark                                                                        Mode  Cnt     Score    Error  Units
MergeBenchmark.measureModifyCallingSave                                         thrpt  250  6685,743 ± 59,933  ops/s
MergeBenchmark.measureModifyWithoutCallingSave                                  thrpt  250  7174,665 ± 46,339  ops/s

MergeBenchmark.measureModifyCallingSave:·gc.alloc.rate.norm                      avgt  250  45662,979 ±   34,722    B/op
MergeBenchmark.measureModifyWithoutCallingSave:·gc.alloc.rate.norm               avgt  250  43389,307 ±   24,978    B/op


---------------------------------------------------------------------------------------------------------------------------

Many-To-One (1 child)

Benchmark                                                                        Mode  Cnt     Score       Error  Units
MergeBenchmark.measureModifyCallingSave                                         thrpt  250  6196,420  ±  227,393  ops/s
MergeBenchmark.measureModifyWithoutCallingSave                                  thrpt  250  7167,608  ±   51,598  ops/s

MergeBenchmark.measureModifyCallingSave:·gc.alloc.rate.norm                      avgt  250  45710,406 ±   31,620  B/op
MergeBenchmark.measureModifyWithoutCallingSave:·gc.alloc.rate.norm               avgt  250  43470,006 ±   33,582  B/op

----------------------------------------------------------------------------------------------------------------------------

One-to-Many (10 children)

Benchmark                                                                        Mode  Cnt     Score    Error  Units
MergeBenchmark.measureModifyCallingSave                                         thrpt  250  3806,259 ± 54,749  ops/s
MergeBenchmark.measureModifyWithoutCallingSave                                  thrpt  250  4161,794 ± 35,645  ops/s

MergeBenchmark.measureModifyCallingSave:·gc.alloc.rate.norm                      avgt  250  73141,790 ±    55,812    B/op
MergeBenchmark.measureModifyWithoutCallingSave:·gc.alloc.rate.norm               avgt  250  68077,917 ±    67,530    B/op


--------------------- для доклада Enterprise без тормозов

Benchmark                                                                           (valid)  Mode  Cnt      Score       Error   Units
CircuitousTreasureHuntBenchmark.doIneffectively                                        true  avgt  100    250,387 ±    37,152   us/op
CircuitousTreasureHuntBenchmark.doEffectively                                          true  avgt  100    244,615 ±    41,030   us/op
CircuitousTreasureHuntBenchmark.doMostEffectively                                      true  avgt  100    341,429 ±    53,034   us/op

CircuitousTreasureHuntBenchmark.doIneffectively                                       false  avgt  100    212,072 ±    20,370   us/op
CircuitousTreasureHuntBenchmark.doEffectively                                         false  avgt  100     25,039 ±     0,372   us/op
CircuitousTreasureHuntBenchmark.doMostEffectively                                     false  avgt  100     24,730 ±     0,299   us/op

CircuitousTreasureHuntBenchmark.doIneffectively:·gc.alloc.rate.norm                    true  avgt  100  55151,313 ±   137,540    B/op
CircuitousTreasureHuntBenchmark.doEffectively:·gc.alloc.rate.norm                      true  avgt  100  55122,672 ±   102,254    B/op
CircuitousTreasureHuntBenchmark.doMostEffectively:·gc.alloc.rate.norm                  true  avgt  100  59686,063 ±   149,453    B/op

CircuitousTreasureHuntBenchmark.doIneffectively:·gc.alloc.rate.norm                   false  avgt  100  55098,227 ±    81,575    B/op
CircuitousTreasureHuntBenchmark.doEffectively:·gc.alloc.rate.norm                     false  avgt  100  10650,609 ±    21,590    B/op
CircuitousTreasureHuntBenchmark.doMostEffectively:·gc.alloc.rate.norm                 false  avgt  100  10586,621 ±    18,441    B/op


Benchmark                                                                           (valid)  Mode  Cnt      Score       Error   Units
CircuitousTreasureHuntBenchmark.doIneffectively                                        true  avgt  100    177,256 ±     3,906   us/op
CircuitousTreasureHuntBenchmark.doEffectively                                          true  avgt  100    181,874 ±     2,783   us/op
CircuitousTreasureHuntBenchmark.doMostEffectively                                      true  avgt  100    183,737 ±     6,170   us/op

CircuitousTreasureHuntBenchmark.doIneffectively                                       false  avgt  100    178,638 ±     4,059   us/op
CircuitousTreasureHuntBenchmark.doEffectively                                         false  avgt  100     24,539 ±     0,559   us/op
CircuitousTreasureHuntBenchmark.doMostEffectively                                     false  avgt  100     24,463 ±     0,296   us/op

CircuitousTreasureHuntBenchmark.doIneffectively:·gc.alloc.rate.norm                    true  avgt  100  55071,143 ±   109,981    B/op
CircuitousTreasureHuntBenchmark.doEffectively:·gc.alloc.rate.norm                      true  avgt  100  55005,616 ±    96,553    B/op
CircuitousTreasureHuntBenchmark.doMostEffectively:·gc.alloc.rate.norm                  true  avgt  100  59337,177 ±    47,891    B/op

CircuitousTreasureHuntBenchmark.doIneffectively:·gc.alloc.rate.norm                   false  avgt  100  55123,276 ±    78,068    B/op
CircuitousTreasureHuntBenchmark.doEffectively:·gc.alloc.rate.norm                     false  avgt  100  10617,912 ±    33,928    B/op
CircuitousTreasureHuntBenchmark.doMostEffectively:·gc.alloc.rate.norm                 false  avgt  100  10607,426 ±    21,411    B/op





RemoveFromArrayListBenchmark

Java 9

Benchmark             (itemsCount)  (percentOfRemovedItems)  Mode  Cnt     Score     Error Units
directOrder                     10                        5  avgt  100    21,101 ±   0,265 ns/op
reverseOrder                    10                        5  avgt  100    22,231 ±   0,864 ns/op
subList                         10                        5  avgt  100    29,627 ±   0,334 ns/op

directOrder                     10                       10  avgt  100    22,394 ±   0,807 ns/op
reverseOrder                    10                       10  avgt  100    21,854 ±   0,434 ns/op
subList                         10                       10  avgt  100    29,549 ±   0,243 ns/op

directOrder                     10                       25  avgt  100    24,048 ±   0,834 ns/op
reverseOrder                    10                       25  avgt  100    22,780 ±   0,864 ns/op
subList                         10                       25  avgt  100    29,385 ±   0,144 ns/op

directOrder                     10                       50  avgt  100    23,582 ±   0,752 ns/op
reverseOrder                    10                       50  avgt  100    22,154 ±   0,605 ns/op
subList                         10                       50  avgt  100    29,863 ±   0,468 ns/op

directOrder                    100                        5  avgt  100   128,580 ±   1,300 ns/op
reverseOrder                   100                        5  avgt  100   129,707 ±   0,997 ns/op
subList                        100                        5  avgt  100   116,529 ±   1,425 ns/op

directOrder                    100                       10  avgt  100   232,685 ±   8,614 ns/op
reverseOrder                   100                       10  avgt  100   186,487 ±   1,650 ns/op
subList                        100                       10  avgt  100   114,983 ±   0,535 ns/op

directOrder                    100                       25  avgt  100   375,304 ±   4,334 ns/op
reverseOrder                   100                       25  avgt  100   357,215 ±   3,639 ns/op
subList                        100                       25  avgt  100   115,418 ±   0,608 ns/op

directOrder                    100                       50  avgt  100   625,820 ±   3,460 ns/op
reverseOrder                   100                       50  avgt  100   136,133 ±   1,128 ns/op
subList                        100                       50  avgt  100   115,587 ±   0,753 ns/op



directOrder:·gc.alloc.rate.norm               10                        5  avgt  100    80,000 ±   0,001 B/op
reverseOrder:·gc.alloc.rate.norm              10                        5  avgt  100    80,000 ±   0,001 B/op
subList:·gc.alloc.rate.norm                   10                        5  avgt  100    80,000 ±   0,001 B/op

directOrder:·gc.alloc.rate.norm               10                       10  avgt  100    80,000 ±   0,001 B/op
reverseOrder:·gc.alloc.rate.norm              10                       10  avgt  100    80,000 ±   0,001 B/op
subList:·gc.alloc.rate.norm                   10                       10  avgt  100    80,000 ±   0,001 B/op

directOrder:·gc.alloc.rate.norm               10                       25  avgt  100    80,000 ±   0,001 B/op
reverseOrder:·gc.alloc.rate.norm              10                       25  avgt  100    80,000 ±   0,001 B/op
subList:·gc.alloc.rate.norm                   10                       25  avgt  100    80,000 ±   0,001 B/op

directOrder:·gc.alloc.rate.norm               10                       50  avgt  100    80,000 ±   0,001 B/op
reverseOrder:·gc.alloc.rate.norm              10                       50  avgt  100    80,000 ±   0,001 B/op
subList:·gc.alloc.rate.norm                   10                       50  avgt  100    80,000 ±   0,001 B/op

directOrder:·gc.alloc.rate.norm              100                        5  avgt  100   440,000 ±   0,001 B/op
reverseOrder:·gc.alloc.rate.norm             100                        5  avgt  100   440,000 ±   0,001 B/op
subList:·gc.alloc.rate.norm                  100                        5  avgt  100   440,000 ±   0,001 B/op

directOrder:·gc.alloc.rate.norm              100                       10  avgt  100   440,000 ±   0,001 B/op
reverseOrder:·gc.alloc.rate.norm             100                       10  avgt  100   440,000 ±   0,001 B/op
subList:·gc.alloc.rate.norm                  100                       10  avgt  100   440,000 ±   0,001 B/op

directOrder:·gc.alloc.rate.norm              100                       25  avgt  100   440,001 ±   0,001 B/op
reverseOrder:·gc.alloc.rate.norm             100                       25  avgt  100   440,001 ±   0,001 B/op
subList:·gc.alloc.rate.norm                  100                       25  avgt  100   440,000 ±   0,001 B/op

directOrder:·gc.alloc.rate.norm              100                       50  avgt  100   440,001 ±   0,001 B/op
reverseOrder:·gc.alloc.rate.norm             100                       50  avgt  100   440,000 ±   0,001 B/op
subList:·gc.alloc.rate.norm                  100                       50  avgt  100   440,000 ±   0,001 B/op

Java 8

Benchmark         (itemsCount)  (percentOfRemovedItems)  Mode  Cnt     Score    Error   Units
directOrder                 10                        5  avgt  100    21,890 ±  0,415   ns/op
reverseOrder                10                        5  avgt  100    22,543 ±  0,421   ns/op
subList                     10                        5  avgt  100    29,962 ±  0,524   ns/op

directOrder                 10                       10  avgt  100    21,777 ±  0,306   ns/op
reverseOrder                10                       10  avgt  100    22,279 ±  0,474   ns/op
subList                     10                       10  avgt  100    29,967 ±  0,582   ns/op

directOrder                 10                       25  avgt  100    21,515 ±  0,207   ns/op
reverseOrder                10                       25  avgt  100    22,275 ±  0,412   ns/op
subList                     10                       25  avgt  100    29,899 ±  0,529   ns/op

directOrder                 10                       50  avgt  100    22,141 ±  0,298   ns/op
reverseOrder                10                       50  avgt  100    22,718 ±  0,482   ns/op
subList                     10                       50  avgt  100    30,217 ±  0,652   ns/op

directOrder                100                        5  avgt  100   139,554 ±  5,524   ns/op
reverseOrder               100                        5  avgt  100   138,123 ±  2,555   ns/op
subList                    100                        5  avgt  100   120,463 ±  2,212   ns/op

directOrder                100                       10  avgt  100   208,267 ±  2,512   ns/op
reverseOrder               100                       10  avgt  100   202,681 ±  4,326   ns/op
subList                    100                       10  avgt  100   119,669 ±  2,046   ns/op

directOrder                100                       25  avgt  100   412,283 ±  3,716   ns/op
reverseOrder               100                       25  avgt  100   364,053 ±  6,598   ns/op
subList                    100                       25  avgt  100   117,446 ±  1,556   ns/op

directOrder                100                       50  avgt  100   709,898 ±  7,442   ns/op
reverseOrder               100                       50  avgt  100   136,523 ±  3,213   ns/op
subList                    100                       50  avgt  100   117,482 ±  1,695   ns/op



directOrder:·gc.alloc.rate.norm               10                        5  avgt  100    80,000 ±  0,001    B/op
reverseOrder:·gc.alloc.rate.norm              10                        5  avgt  100    80,000 ±  0,001    B/op
subList:·gc.alloc.rate.norm                   10                        5  avgt  100    80,000 ±  0,001    B/op

directOrder:·gc.alloc.rate.norm               10                       10  avgt  100    80,000 ±  0,001    B/op
reverseOrder:·gc.alloc.rate.norm              10                       10  avgt  100    80,000 ±  0,001    B/op
subList:·gc.alloc.rate.norm                   10                       10  avgt  100    80,000 ±  0,001    B/op

directOrder:·gc.alloc.rate.norm               10                       25  avgt  100    80,000 ±  0,001    B/op
reverseOrder:·gc.alloc.rate.norm              10                       25  avgt  100    80,000 ±  0,001    B/op
subList:·gc.alloc.rate.norm                   10                       25  avgt  100    80,000 ±  0,001    B/op

reverseOrder:·gc.alloc.rate.norm              10                       50  avgt  100    80,000 ±  0,001    B/op
directOrder:·gc.alloc.rate.norm               10                       50  avgt  100    80,000 ±  0,001    B/op
subList:·gc.alloc.rate.norm                   10                       50  avgt  100    80,000 ±  0,001    B/op

directOrder:·gc.alloc.rate.norm              100                        5  avgt  100   440,000 ±  0,001    B/op
reverseOrder:·gc.alloc.rate.norm             100                        5  avgt  100   440,000 ±  0,001    B/op
subList:·gc.alloc.rate.norm                  100                        5  avgt  100   440,000 ±  0,001    B/op

directOrder:·gc.alloc.rate.norm              100                       10  avgt  100   440,000 ±  0,001    B/op
reverseOrder:·gc.alloc.rate.norm             100                       10  avgt  100   440,000 ±  0,001    B/op
subList:·gc.alloc.rate.norm                  100                       10  avgt  100   440,000 ±  0,001    B/op

directOrder:·gc.alloc.rate.norm              100                       25  avgt  100   440,001 ±  0,001    B/op
reverseOrder:·gc.alloc.rate.norm             100                       25  avgt  100   440,001 ±  0,001    B/op
subList:·gc.alloc.rate.norm                  100                       25  avgt  100   440,000 ±  0,001    B/op

directOrder:·gc.alloc.rate.norm              100                       50  avgt  100   440,001 ±  0,001    B/op
reverseOrder:·gc.alloc.rate.norm             100                       50  avgt  100   440,000 ±  0,001    B/op
subList:·gc.alloc.rate.norm                  100                       50  avgt  100   440,000 ±  0,001    B/op




Benchmark                                                           (entityCount)  Mode  Cnt        Score         Error   Units
LoopVsSingleCallBenchmark.findInLoop                                           10  avgt  100      469,424 ±       8,099   us/op
LoopVsSingleCallBenchmark.findWithSingleCall                                   10  avgt  100      205,886 ±      11,615   us/op

LoopVsSingleCallBenchmark.findInLoop                                          100  avgt  100     1887,240 ±      83,701   us/op
LoopVsSingleCallBenchmark.findWithSingleCall                                  100  avgt  100      462,535 ±       6,892   us/op

LoopVsSingleCallBenchmark.findInLoop                                         1000  avgt  100    19355,030 ±     433,351   us/op
LoopVsSingleCallBenchmark.findWithSingleCall                                 1000  avgt  100    16812,107 ±    2208,749   us/op

LoopVsSingleCallBenchmark.findInLoop:·gc.alloc.rate.norm                       10  avgt  100   158802,101 ±     452,979    B/op
LoopVsSingleCallBenchmark.findWithSingleCall:·gc.alloc.rate.norm               10  avgt  100    83525,794 ±     105,359    B/op

LoopVsSingleCallBenchmark.findInLoop:·gc.alloc.rate.norm                      100  avgt  100   654327,272 ±    1148,819    B/op
LoopVsSingleCallBenchmark.findWithSingleCall:·gc.alloc.rate.norm              100  avgt  100   240181,020 ±      62,081    B/op

LoopVsSingleCallBenchmark.findInLoop:·gc.alloc.rate.norm                     1000  avgt  100  6279014,561 ±   19408,550    B/op
LoopVsSingleCallBenchmark.findWithSingleCall:·gc.alloc.rate.norm             1000  avgt  100  8117463,363 ±   27417,090    B/op


Benchmark                                                                          Mode  Cnt      Score      Error   Units
LazyTransactionBenchmark.measureLazyTransaction                                    avgt  100      1,368 ±    0,034   us/op
LazyTransactionBenchmark.measureEagerTransaction                                   avgt  100     34,516 ±    2,051   us/op

LazyTransactionBenchmark.measureLazyTransaction:·gc.alloc.rate.norm                avgt  100    520,001 ±    0,001    B/op
LazyTransactionBenchmark.measureEagerTransaction:·gc.alloc.rate.norm               avgt  100  11904,815 ±   25,272    B/op

Java 8

Benchmark                                                  (collectionType)  (size)  Mode  Cnt      Score      Error   Units
measureForEach                                                         list      10  avgt  100    539,663 ±    3,865   ns/op
measureIteratorFromStream                                              list      10  avgt  100    802,860 ±    9,600   ns/op
measureIteratorFromCollectedList                                       list      10  avgt  100    628,270 ±   11,582   ns/op

measureForEach                                                         list     100  avgt  100   5009,942 ±   37,940   ns/op
measureIteratorFromStream                                              list     100  avgt  100   7121,474 ±  131,639   ns/op
measureIteratorFromCollectedList                                       list     100  avgt  100   5570,164 ±   36,062   ns/op

measureForEach                                                         list    1000  avgt  100  52946,050 ± 1459,283   ns/op
measureIteratorFromStream                                              list    1000  avgt  100  76045,745 ± 1458,132   ns/op
measureIteratorFromCollectedList                                       list    1000  avgt  100  62056,434 ± 2977,828   ns/op

measureForEach:·gc.alloc.rate.norm                                     list      10  avgt  100    855,200 ±    0,818    B/op
measureIteratorFromStream:·gc.alloc.rate.norm                          list      10  avgt  100   1054,400 ±    1,091    B/op
measureIteratorFromCollectedList:·gc.alloc.rate.norm                   list      10  avgt  100    960,000 ±    2,987    B/op

measureForEach:·gc.alloc.rate.norm                                     list     100  avgt  100   6600,002 ±    2,112    B/op
measureIteratorFromStream:·gc.alloc.rate.norm                          list     100  avgt  100   6784,003 ±    2,112    B/op
measureIteratorFromCollectedList:·gc.alloc.rate.norm                   list     100  avgt  100   8049,602 ±    4,189    B/op

measureForEach:·gc.alloc.rate.norm                                     list    1000  avgt  100  64010,423 ±   11,827    B/op
measureIteratorFromStream:·gc.alloc.rate.norm                          list    1000  avgt  100  64205,633 ±   18,090    B/op
measureIteratorFromCollectedList:·gc.alloc.rate.norm                   list    1000  avgt  100  79097,627 ±   12,244    B/op

measureForEach                                                          set      10  avgt  100    636,313 ±   14,099   ns/op
measureIteratorFromCollectedList                                        set      10  avgt  100    780,868 ±   18,441   ns/op
measureIteratorFromStream                                               set      10  avgt  100    853,301 ±    8,823   ns/op

measureForEach                                                          set     100  avgt  100   6424,974 ±  553,441   ns/op
measureIteratorFromStream                                               set     100  avgt  100   7309,634 ±  103,849   ns/op
measureIteratorFromCollectedList                                        set     100  avgt  100   6744,272 ±   78,717   ns/op

measureForEach                                                          set    1000  avgt  100  66635,240 ± 1211,282   ns/op
measureIteratorFromStream                                               set    1000  avgt  100  86997,079 ± 2141,281   ns/op
measureIteratorFromCollectedList                                        set    1000  avgt  100  72514,557 ±  703,861   ns/op

measureForEach:·gc.alloc.rate.norm                                      set      10  avgt  100    861,600 ±    1,250    B/op
measureIteratorFromStream:·gc.alloc.rate.norm                           set      10  avgt  100   1060,800 ±    1,809    B/op
measureIteratorFromCollectedList:·gc.alloc.rate.norm                    set      10  avgt  100    967,200 ±    3,329    B/op

measureForEach:·gc.alloc.rate.norm                                      set     100  avgt  100   6607,203 ±    3,328    B/op
measureIteratorFromStream:·gc.alloc.rate.norm                           set     100  avgt  100   6804,003 ±    4,604    B/op
measureIteratorFromCollectedList:·gc.alloc.rate.norm                    set     100  avgt  100   8060,003 ±    3,709    B/op

measureForEach:·gc.alloc.rate.norm                                      set    1000  avgt  100  63988,829 ±   11,836    B/op
measureIteratorFromStream:·gc.alloc.rate.norm                           set    1000  avgt  100  64199,238 ±   11,534    B/op
measureIteratorFromCollectedList:·gc.alloc.rate.norm                    set    1000  avgt  100  79109,632 ±    8,713    B/op

Java 9

Benchmark                                                  (collectionType)  (size)  Mode  Cnt      Score      Error   Units
measureForEach                                                         list      10  avgt  100    416,411 ±   21,179   ns/op
measureIteratorFromStream                                              list      10  avgt  100    599,202 ±    7,988   ns/op
measureIteratorFromCollectedList                                       list      10  avgt  100    485,270 ±    8,807   ns/op

measureForEach                                                         list     100  avgt  100   3761,885 ±  163,805   ns/op
measureIteratorFromStream                                              list     100  avgt  100   5220,375 ±   30,295   ns/op
measureIteratorFromCollectedList                                       list     100  avgt  100   3993,701 ±   49,647   ns/op

measureForEach                                                         list    1000  avgt  100  34939,077 ±  383,860   ns/op
measureIteratorFromStream                                              list    1000  avgt  100  49409,624 ±  476,151   ns/op
measureIteratorFromCollectedList                                       list    1000  avgt  100  43252,519 ±  692,061   ns/op

measureForEach                                                          set      10  avgt  100    433,885 ±    3,420   ns/op
measureIteratorFromStream                                               set      10  avgt  100    660,230 ±   16,530   ns/op
measureIteratorFromCollectedList                                        set      10  avgt  100    559,765 ±    4,393   ns/op

measureForEach                                                          set     100  avgt  100   4280,782 ±   44,527   ns/op
measureIteratorFromStream                                               set     100  avgt  100   5786,209 ±   95,587   ns/op
measureIteratorFromCollectedList                                        set     100  avgt  100   4905,285 ±   85,272   ns/op

measureForEach                                                          set    1000  avgt  100  50037,610 ±  436,697   ns/op
measureIteratorFromStream                                               set    1000  avgt  100  66463,477 ±  716,422   ns/op
measureIteratorFromCollectedList                                        set    1000  avgt  100  57080,198 ±  979,201   ns/op

measureForEach:·gc.alloc.rate.norm                                     list      10  avgt  100    776,000 ±    0,001    B/op
measureIteratorFromStream:·gc.alloc.rate.norm                          list      10  avgt  100    974,400 ±    1,091    B/op
measureIteratorFromCollectedList:·gc.alloc.rate.norm                   list      10  avgt  100    909,600 ±    1,250    B/op

measureForEach:·gc.alloc.rate.norm                                     list     100  avgt  100   5789,602 ±    3,000    B/op
measureIteratorFromStream:·gc.alloc.rate.norm                          list     100  avgt  100   5985,602 ±    5,426    B/op
measureIteratorFromCollectedList:·gc.alloc.rate.norm                   list     100  avgt  100   7247,202 ±    5,778    B/op

measureForEach:·gc.alloc.rate.norm                                     list    1000  avgt  100  56015,214 ±   10,522    B/op
measureIteratorFromStream:·gc.alloc.rate.norm                          list    1000  avgt  100  56175,220 ±    7,363    B/op
measureIteratorFromCollectedList:·gc.alloc.rate.norm                   list    1000  avgt  100  71080,018 ±   17,030    B/op

measureForEach:·gc.alloc.rate.norm                                      set      10  avgt  100    780,800 ±    1,809    B/op
measureIteratorFromStream:·gc.alloc.rate.norm                           set      10  avgt  100    981,600 ±    1,250    B/op
measureIteratorFromCollectedList:·gc.alloc.rate.norm                    set      10  avgt  100    918,400 ±    1,091    B/op

measureForEach:·gc.alloc.rate.norm                                      set     100  avgt  100   5802,402 ±    5,036    B/op
measureIteratorFromStream:·gc.alloc.rate.norm                           set     100  avgt  100   6000,802 ±    2,847    B/op
measureIteratorFromCollectedList:·gc.alloc.rate.norm                    set     100  avgt  100   7268,802 ±    2,182    B/op

measureForEach:·gc.alloc.rate.norm                                      set    1000  avgt  100  56022,421 ±    8,945    B/op
measureIteratorFromStream:·gc.alloc.rate.norm                           set    1000  avgt  100  56214,427 ±   14,926    B/op
measureIteratorFromCollectedList:·gc.alloc.rate.norm                    set    1000  avgt  100  71103,224 ±   18,950    B/op

CachedFormatterBenchmark

Java 8

Benchmark                                                         Mode   Cnt     Score    Error   Units
measureDateTimeFormatter                                          avgt  1000   201,068 ±  0,758   ns/op
measureSimpleDateTimeFormat                                       avgt  1000   268,999 ±  2,329   ns/op
measureDateTimeFormatterWhenDateConverted                         avgt  1000   315,248 ±  0,749   ns/op

measureDateTimeFormatter:·gc.alloc.rate.norm                      avgt  1000   288,000 ±  0,001    B/op
measureSimpleDateTimeFormat:·gc.alloc.rate.norm                   avgt  1000   560,000 ±  0,001    B/op
measureDateTimeFormatterWhenDateConverted:·gc.alloc.rate.norm     avgt  1000   419,200 ±  0,766    B/op

Java 9

Benchmark                                                         Mode   Cnt     Score    Error   Units
measureDateTimeFormatter                                          avgt  1000   165,221 ±  2,410   ns/op
measureSimpleDateTimeFormat                                       avgt  1000   273,422 ±  3,544   ns/op
measureDateTimeFormatterWhenDateConverted                         avgt  1000   248,831 ±  0,919   ns/op

measureDateTimeFormatter:·gc.alloc.rate.norm                      avgt  1000   248,000 ±  0,001    B/op
measureSimpleDateTimeFormat:·gc.alloc.rate.norm                   avgt  1000   544,000 ±  0,001    B/op
measureDateTimeFormatterWhenDateConverted:·gc.alloc.rate.norm     avgt  1000   360,000 ±  0,001    B/op


BulkOperationBenchmark Java 8

Benchmark                                            (collectionType)  (count)   Mode  Cnt      Score      Error   Units
measureAddOneByOne                                          arrayList       10  thrpt  100  10028,125 ±   76,425  ops/ms
measureAddAll                                               arrayList       10  thrpt  100  19816,186 ±  230,059  ops/ms
measureAddAllViaConstructorArg                              arrayList       10  thrpt  100  51182,483 ±  277,071  ops/ms

measureAddOneByOne                                          arrayList      100  thrpt  100    925,152 ±   19,423  ops/ms
measureAddAll                                               arrayList      100  thrpt  100   4689,072 ±   39,285  ops/ms
measureAddAllViaConstructorArg                              arrayList      100  thrpt  100   9151,554 ±   90,605  ops/ms

measureAddOneByOne                                          arrayList     1000  thrpt  100     95,410 ±    2,195  ops/ms
measureAddAll                                               arrayList     1000  thrpt  100    585,137 ±    5,904  ops/ms
measureAddAllViaConstructorArg                              arrayList     1000  thrpt  100    992,899 ±    7,208  ops/ms

measureAddOneByOne:·gc.alloc.rate.norm                      arrayList       10  thrpt  100     80,000 ±    0,001    B/op
measureAddAll:·gc.alloc.rate.norm                           arrayList       10  thrpt  100    136,000 ±    0,001    B/op
measureAddAllViaConstructorArg:·gc.alloc.rate.norm          arrayList       10  thrpt  100     80,000 ±    0,001    B/op

measureAddOneByOne:·gc.alloc.rate.norm                      arrayList      100  thrpt  100   1400,005 ±    0,001    B/op
measureAddAll:·gc.alloc.rate.norm                           arrayList      100  thrpt  100    856,001 ±    0,001    B/op
measureAddAllViaConstructorArg:·gc.alloc.rate.norm          arrayList      100  thrpt  100    440,000 ±    0,001    B/op

measureAddOneByOne:·gc.alloc.rate.norm                      arrayList     1000  thrpt  100  15024,416 ±    0,011    B/op
measureAddAll:·gc.alloc.rate.norm                           arrayList     1000  thrpt  100   8056,067 ±    0,001    B/op
measureAddAllViaConstructorArg:·gc.alloc.rate.norm          arrayList     1000  thrpt  100   4040,039 ±    0,001    B/op

measureAddOneByOne                                            hashSet       10  thrpt  100   5028,957 ±   65,294  ops/ms
measureAddAll                                                 hashSet       10  thrpt  100   4843,700 ±   60,817  ops/ms
measureAddAllViaConstructorArg                                hashSet       10  thrpt  100   4820,844 ±   79,380  ops/ms

measureAddAll                                                 hashSet      100  thrpt  100    366,065 ±    5,339  ops/ms
measureAddOneByOne                                            hashSet      100  thrpt  100    362,429 ±    5,953  ops/ms
measureAddAllViaConstructorArg                                hashSet      100  thrpt  100    528,543 ±    3,216  ops/ms

measureAddOneByOne                                            hashSet     1000  thrpt  100     31,473 ±    1,064  ops/ms
measureAddAll                                                 hashSet     1000  thrpt  100     32,229 ±    0,588  ops/ms
measureAddAllViaConstructorArg                                hashSet     1000  thrpt  100     51,267 ±    0,367  ops/ms

measureAddOneByOne:·gc.alloc.rate.norm                        hashSet       10  thrpt  100    464,000 ±    0,001    B/op
measureAddAll:·gc.alloc.rate.norm                             hashSet       10  thrpt  100    476,800 ±    5,344    B/op
measureAddAllViaConstructorArg:·gc.alloc.rate.norm            hashSet       10  thrpt  100    467,200 ±    3,272    B/op

measureAddOneByOne:·gc.alloc.rate.norm                        hashSet      100  thrpt  100   5328,012 ±    0,001    B/op
measureAddAll:·gc.alloc.rate.norm                             hashSet      100  thrpt  100   5328,012 ±    0,001    B/op
measureAddAllViaConstructorArg:·gc.alloc.rate.norm            hashSet      100  thrpt  100   4304,008 ±    0,001    B/op

measureAddOneByOne:·gc.alloc.rate.norm                        hashSet     1000  thrpt  100  48513,271 ±    0,045    B/op
measureAddAll:·gc.alloc.rate.norm                             hashSet     1000  thrpt  100  48513,220 ±    0,023    B/op
measureAddAllViaConstructorArg:·gc.alloc.rate.norm            hashSet     1000  thrpt  100  40272,766 ±    0,006    B/op


BulkOperationBenchmark Java 9

Benchmark                                                        (collectionType)  (count)   Mode  Cnt      Score      Error   Units
measureAddOneByOne                                                      arrayList       10  thrpt  100   8329,917 ±  261,581  ops/ms
measureAddAll                                                           arrayList       10  thrpt  100  23504,437 ±  433,475  ops/ms
measureAddAllViaConstructorArg                                          arrayList       10  thrpt  100  48377,789 ± 1371,447  ops/ms

measureAddOneByOne                                                      arrayList      100  thrpt  100    825,646 ±    7,881  ops/ms
measureAddAll                                                           arrayList      100  thrpt  100   4785,983 ±   53,050  ops/ms
measureAddAllViaConstructorArg                                          arrayList      100  thrpt  100   9360,042 ±   87,589  ops/ms

measureAddOneByOne                                                      arrayList     1000  thrpt  100     85,161 ±    1,894  ops/ms
measureAddAll                                                           arrayList     1000  thrpt  100    609,048 ±    5,870  ops/ms
measureAddAllViaConstructorArg                                          arrayList     1000  thrpt  100   1018,609 ±    9,440  ops/ms

measureAddOneByOne:·gc.alloc.rate.norm                                  arrayList       10  thrpt  100     80,000 ±    0,001    B/op
measureAddAll:·gc.alloc.rate.norm                                       arrayList       10  thrpt  100    136,000 ±    0,001    B/op
measureAddAllViaConstructorArg:·gc.alloc.rate.norm                      arrayList       10  thrpt  100     80,000 ±    0,001    B/op

measureAddOneByOne:·gc.alloc.rate.norm                                  arrayList      100  thrpt  100   1400,007 ±    0,001    B/op
measureAddAll:·gc.alloc.rate.norm                                       arrayList      100  thrpt  100    856,001 ±    0,001    B/op
measureAddAllViaConstructorArg:·gc.alloc.rate.norm                      arrayList      100  thrpt  100    440,001 ±    0,001    B/op

measureAddOneByOne:·gc.alloc.rate.norm                                  arrayList     1000  thrpt  100  15024,478 ±    0,020    B/op
measureAddAll:·gc.alloc.rate.norm                                       arrayList     1000  thrpt  100   8056,066 ±    0,002    B/op
measureAddAllViaConstructorArg:·gc.alloc.rate.norm                      arrayList     1000  thrpt  100   4040,040 ±    0,001    B/op

measureAddOneByOne                                                        hashSet       10  thrpt  100   4894,224 ±  175,730  ops/ms
measureAddAll                                                             hashSet       10  thrpt  100   5240,067 ±   90,261  ops/ms
measureAddAllViaConstructorArg                                            hashSet       10  thrpt  100   5114,219 ±   97,314  ops/ms

measureAddOneByOne                                                        hashSet      100  thrpt  100    347,767 ±   10,263  ops/ms
measureAddAll                                                             hashSet      100  thrpt  100    373,444 ±    6,276  ops/ms
measureAddAllViaConstructorArg                                            hashSet      100  thrpt  100    482,683 ±   22,639  ops/ms

measureAddOneByOne                                                        hashSet     1000  thrpt  100     28,017 ±    1,699  ops/ms
measureAddAll                                                             hashSet     1000  thrpt  100     30,945 ±    0,815  ops/ms
measureAddAllViaConstructorArg                                            hashSet     1000  thrpt  100     49,308 ±    1,262  ops/ms

measureAddOneByOne:·gc.alloc.rate.norm                                    hashSet       10  thrpt  100    464,000 ±    0,001    B/op
measureAddAll:·gc.alloc.rate.norm                                         hashSet       10  thrpt  100    464,000 ±    0,001    B/op
measureAddAllViaConstructorArg:·gc.alloc.rate.norm                        hashSet       10  thrpt  100    464,000 ±    0,001    B/op

measureAddOneByOne:·gc.alloc.rate.norm                                    hashSet      100  thrpt  100   5328,016 ±    0,003    B/op
measureAddAll:·gc.alloc.rate.norm                                         hashSet      100  thrpt  100   5328,015 ±    0,003    B/op
measureAddAllViaConstructorArg:·gc.alloc.rate.norm                        hashSet      100  thrpt  100   4304,012 ±    0,002    B/op

measureAddOneByOne:·gc.alloc.rate.norm                                    hashSet     1000  thrpt  100  48513,506 ±    0,162    B/op
measureAddAll:·gc.alloc.rate.norm                                         hashSet     1000  thrpt  100  48513,307 ±    0,047    B/op
measureAddAllViaConstructorArg:·gc.alloc.rate.norm                        hashSet     1000  thrpt  100  40272,824 ±    0,034    B/op



--------------------- для доклада Интересная идея

JDK 9

Benchmark                                                                                 Mode   Cnt     Score    Error   Units
ContainsInEmptyHashSetBenchmark.measureClearCustomHashSet                                 avgt  1000     3,571 ±  0,009   ns/op
ContainsInEmptyHashSetBenchmark.measureClearJdkHashSet                                    avgt  1000     4,594 ±  0,029   ns/op

ContainsInEmptyHashSetBenchmark.measureContainsAllInCustomHashSet                         avgt  1000     3,367 ±  0,007   ns/op
ContainsInEmptyHashSetBenchmark.measureContainsAllInJdkHashSet                            avgt  1000     9,780 ±  0,226   ns/op

ContainsInEmptyHashSetBenchmark.measureContainsInCustomHashSet                            avgt  1000     3,345 ±  0,011   ns/op
ContainsInEmptyHashSetBenchmark.measureContainsInJdkHashSet                               avgt  1000     4,374 ±  0,014   ns/op

-------- memory --------

ContainsInEmptyHashSetBenchmark.measureClearCustomHashSet:·gc.alloc.rate.norm             avgt  1000    ≈ 10±±             B/op
ContainsInEmptyHashSetBenchmark.measureClearJdkHashSet:·gc.alloc.rate.norm                avgt  1000    ≈ 10±±             B/op

ContainsInEmptyHashSetBenchmark.measureContainsAllInCustomHashSet:·gc.alloc.rate.norm     avgt  1000    ≈ 10±±             B/op
ContainsInEmptyHashSetBenchmark.measureContainsAllInJdkHashSet:·gc.alloc.rate.norm        avgt  1000    19,200 ±  1,002    B/op

ContainsInEmptyHashSetBenchmark.measureContainsInCustomHashSet:·gc.alloc.rate.norm        avgt  1000    ≈ 10±±             B/op
ContainsInEmptyHashSetBenchmark.measureContainsInJdkHashSet:·gc.alloc.rate.norm           avgt  1000    ≈ 10±±             B/op

JDK 8

Benchmark                                                          Mode   Cnt  Score   Error  Units
ContainsInEmptyHashSetBenchmark.measureClearCustomHashSet          avgt  1000  3,719 ± 0,023  ns/op
ContainsInEmptyHashSetBenchmark.measureClearJdkHashSet             avgt  1000  4,519 ± 0,014  ns/op

ContainsInEmptyHashSetBenchmark.measureContainsAllInCustomHashSet  avgt  1000  3,401 ± 0,013  ns/op
ContainsInEmptyHashSetBenchmark.measureContainsAllInJdkHashSet     avgt  1000  8,460 ± 0,092  ns/op

ContainsInEmptyHashSetBenchmark.measureContainsInCustomHashSet     avgt  1000  3,398 ± 0,009  ns/op
ContainsInEmptyHashSetBenchmark.measureContainsInJdkHashSet        avgt  1000  3,979 ± 0,012  ns/op

Java 8

Benchmark                                                                           Mode  Cnt    Score     Error   Units
ContainsInEmptyHashSetBenchmark._measureSmartListContainsAll                        avgt   20    5,434 ±   0,628   ns/op
ContainsInEmptyHashSetBenchmark.measureSmartListContainsAll                         avgt   20   10,689 ±   4,140   ns/op

ContainsInEmptyHashSetBenchmark.measureSmartListContainsAll:·gc.alloc.rate.norm     avgt   20   16,000 ±  14,255    B/op

Java 9

Benchmark                                                                           Mode  Cnt   Score    Error   Units
ContainsInEmptyHashSetBenchmark._measureSmartListContainsAll                        avgt  200   4,532 ±  0,026   ns/op
ContainsInEmptyHashSetBenchmark.measureSmartListContainsAll                         avgt  200   5,079 ±  0,049   ns/op

Java 8

ContainsInEmptyHashSetBenchmark.measureContainsKeyIdeaHashMap    avgt  200  3,215 ± 0,022  ns/op
ContainsInEmptyHashSetBenchmark.measureContainsKeyJdkHashMap     avgt  200  3,545 ± 0,021  ns/op

ContainsInEmptyHashSetBenchmark.measureContainsValueIdeaHashMap  avgt  200  3,210 ± 0,018  ns/op
ContainsInEmptyHashSetBenchmark.measureContainsValueJdkHashMap   avgt  200  3,679 ± 0,114  ns/op

ContainsInEmptyHashSetBenchmark.measureGetFromIdeaHashMap        avgt  200  3,871 ± 0,041  ns/op
ContainsInEmptyHashSetBenchmark.measureGetFromJdkHashMap         avgt  200  4,186 ± 0,060  ns/op

ContainsInEmptyHashSetBenchmark.measureRemoveFromIdeaHashMap     avgt  200  3,700 ± 0,017  ns/op
ContainsInEmptyHashSetBenchmark.measureRemoveFromJdkHashMap      avgt  200  4,246 ± 0,029  ns/op

Java 9

ContainsInEmptyHashSetBenchmark.measureContainsKeyIdeaHashMap    avgt  200   3,049 ±  0,015   ns/op
ContainsInEmptyHashSetBenchmark.measureContainsKeyJdkHashMap     avgt  200   3,497 ±  0,018   ns/op

ContainsInEmptyHashSetBenchmark.measureContainsValueIdeaHashMap  avgt  200   3,018 ±  0,017   ns/op
ContainsInEmptyHashSetBenchmark.measureContainsValueJdkHashMap   avgt  200   3,364 ±  0,017   ns/op

ContainsInEmptyHashSetBenchmark.measureGetFromIdeaHashMap        avgt  200   3,524 ±  0,021   ns/op
ContainsInEmptyHashSetBenchmark.measureGetFromJdkHashMap         avgt  200   4,022 ±  0,029   ns/op

ContainsInEmptyHashSetBenchmark.measureRemoveFromIdeaHashMap     avgt  200   3,552 ±  0,078   ns/op
ContainsInEmptyHashSetBenchmark.measureRemoveFromJdkHashMap      avgt  200   4,033 ±  0,034   ns/op

--------------------- для доклада по малым оптимизациям

Java 9

Benchmark                                 Mode  Cnt   Score   Error  Units
MiscBenchmark.measureBooleanGetter        avgt  200   3,164 ± 0,033  ns/op
MiscBenchmark.measureNullabilityCheck     avgt  200   3,106 ± 0,042  ns/op
MiscBenchmark.measureContainsInHashSet    avgt  200   6,111 ± 0,090  ns/op
MiscBenchmark.measureContainsInArrayList  avgt  200  11,847 ± 0,124  ns/op

Java 8

Benchmark                                 Mode  Cnt   Score   Error  Units
MiscBenchmark.measureBooleanGetter        avgt  200   3,378 ± 0,106  ns/op
MiscBenchmark.measureNullabilityCheck     avgt  200   3,350 ± 0,090  ns/op
MiscBenchmark.measureContainsInHashSet    avgt  200   7,772 ± 0,738  ns/op
MiscBenchmark.measureContainsInArrayList  avgt  200  14,179 ± 1,189  ns/op


Java 8

Benchmark                                                           (size)  Mode  Cnt     Score     Error   Units

SubArrayBenchmark.measureSubArrayViaSubList                              5  avgt   20    37,915 ±   0,723   ns/op
SubArrayBenchmark.measureSubArrayViaArraysCopyOf                         5  avgt   20     7,711 ±   0,091   ns/op

SubArrayBenchmark.measureSubArrayViaSubList                             10  avgt   20    46,722 ±   1,043   ns/op
SubArrayBenchmark.measureSubArrayViaArraysCopyOf                        10  avgt   20     8,449 ±   0,217   ns/op

SubArrayBenchmark.measureSubArrayViaSubList                            100  avgt   20   125,830 ±   1,120   ns/op
SubArrayBenchmark.measureSubArrayViaArraysCopyOf                       100  avgt   20    41,890 ±   2,162   ns/op
---------------------------------------------------------------
SubArrayBenchmark.measureSubArrayViaSubList:·gc.alloc.rate.norm          5  avgt   20   128,000 ±   0,001    B/op
SubArrayBenchmark.measureSubArrayViaArraysCopyOf:·gc.alloc.rate.norm     5  avgt   20    24,000 ±   0,001    B/op

SubArrayBenchmark.measureSubArrayViaSubList:·gc.alloc.rate.norm         10  avgt   20   144,000 ±   0,001    B/op
SubArrayBenchmark.measureSubArrayViaArraysCopyOf:·gc.alloc.rate.norm    10  avgt   20    40,000 ±   0,001    B/op

SubArrayBenchmark.measureSubArrayViaSubList:·gc.alloc.rate.norm        100  avgt   20   320,000 ±   0,001    B/op
SubArrayBenchmark.measureSubArrayViaArraysCopyOf:·gc.alloc.rate.norm   100  avgt   20   216,000 ±   0,001    B/op
-------------------------------------------------------------------------------------------------------------------------------
SubArrayBenchmark.measureSubListViaArraysAsList                          5  avgt   20    10,453 ±   0,249   ns/op
SubArrayBenchmark.measureSubListViaArraysCopyOf                          5  avgt   20    10,401 ±   0,404   ns/op

SubArrayBenchmark.measureSubListViaArraysAsList                         10  avgt   20    10,908 ±   0,631   ns/op
SubArrayBenchmark.measureSubListViaArraysCopyOf                         10  avgt   20    12,137 ±   0,577   ns/op

SubArrayBenchmark.measureSubListViaArraysAsList                        100  avgt   20    11,572 ±   0,805   ns/op
SubArrayBenchmark.measureSubListViaArraysCopyOf                        100  avgt   20    45,113 ±   0,955   ns/op
---------------------------------------------------------------
SubArrayBenchmark.measureSubListViaArraysAsList:·gc.alloc.rate.norm      5  avgt   20    56,000 ±   0,001    B/op
SubArrayBenchmark.measureSubListViaArraysCopyOf:·gc.alloc.rate.norm      5  avgt   20    48,000 ±   0,001    B/op

SubArrayBenchmark.measureSubListViaArraysAsList:·gc.alloc.rate.norm     10  avgt   20    56,000 ±   0,001    B/op
SubArrayBenchmark.measureSubListViaArraysCopyOf:·gc.alloc.rate.norm     10  avgt   20    64,000 ±   0,001    B/op

SubArrayBenchmark.measureSubListViaArraysAsList:·gc.alloc.rate.norm    100  avgt   20    56,000 ±   0,001    B/op
SubArrayBenchmark.measureSubListViaArraysCopyOf:·gc.alloc.rate.norm    100  avgt   20   240,000 ±   0,001    B/op


Java 9

Benchmark                                                                          (size)  Mode  Cnt     Score    Error   Units
SubArrayBenchmark.measureSubArrayViaSubList                                             5  avgt  100    45,156 ±  1,999   ns/op
SubArrayBenchmark.measureSubArrayViaArraysCopyOf                                        5  avgt  100    11,546 ±  0,104   ns/op

SubArrayBenchmark.measureSubArrayViaSubList                                            10  avgt  100    53,732 ±  1,274   ns/op
SubArrayBenchmark.measureSubArrayViaArraysCopyOf                                       10  avgt  100    13,393 ±  0,194   ns/op

SubArrayBenchmark.measureSubArrayViaSubList                                           100  avgt  100   156,539 ±  2,021   ns/op
SubArrayBenchmark.measureSubArrayViaArraysCopyOf                                      100  avgt  100    56,647 ±  1,062   ns/op
---------------------------------------------------------------
SubArrayBenchmark.measureSubListViaArraysCopyOf                                         5  avgt  100    15,519 ±  0,183   ns/op
SubArrayBenchmark.measureSubListViaArraysAsList                                         5  avgt  100    14,183 ±  0,117   ns/op

SubArrayBenchmark.measureSubListViaArraysCopyOf                                        10  avgt  100    16,800 ±  0,077   ns/op
SubArrayBenchmark.measureSubListViaArraysAsList                                        10  avgt  100    14,154 ±  0,095   ns/op

SubArrayBenchmark.measureSubListViaArraysCopyOf                                       100  avgt  100    59,344 ±  0,317   ns/op
SubArrayBenchmark.measureSubListViaArraysAsList                                       100  avgt  100    14,120 ±  0,065   ns/op
-------------------------------------------------------------------------------------------------------------------------------
SubArrayBenchmark.measureSubArrayViaArraysCopyOf:·gc.alloc.rate.norm                    5  avgt  100    24,000 ±  0,001    B/op
SubArrayBenchmark.measureSubArrayViaSubList:·gc.alloc.rate.norm                         5  avgt  100   136,000 ±  0,001    B/op

SubArrayBenchmark.measureSubArrayViaArraysCopyOf:·gc.alloc.rate.norm                   10  avgt  100    40,000 ±  0,001    B/op
SubArrayBenchmark.measureSubArrayViaSubList:·gc.alloc.rate.norm                        10  avgt  100   168,000 ±  0,001    B/op

SubArrayBenchmark.measureSubArrayViaArraysCopyOf:·gc.alloc.rate.norm                  100  avgt  100   216,000 ±  0,001    B/op
SubArrayBenchmark.measureSubArrayViaSubList:·gc.alloc.rate.norm                       100  avgt  100   328,000 ±  0,001    B/op
---------------------------------------------------------------
SubArrayBenchmark.measureSubListViaArraysAsList:·gc.alloc.rate.norm                     5  avgt  100    56,000 ±  0,001    B/op
SubArrayBenchmark.measureSubListViaArraysCopyOf:·gc.alloc.rate.norm                     5  avgt  100    48,000 ±  0,001    B/op

SubArrayBenchmark.measureSubListViaArraysCopyOf:·gc.alloc.rate.norm                    10  avgt  100    64,000 ±  0,001    B/op
SubArrayBenchmark.measureSubListViaArraysAsList:·gc.alloc.rate.norm                    10  avgt  100    56,000 ±  0,001    B/op

SubArrayBenchmark.measureSubListViaArraysAsList:·gc.alloc.rate.norm                   100  avgt  100    56,000 ±  0,001    B/op
SubArrayBenchmark.measureSubListViaArraysCopyOf:·gc.alloc.rate.norm                   100  avgt  100   240,000 ±  0,001    B/op


ConcatenationVsFormatBenchmark

Java 8

Benchmark                                              (length)  Mode  Cnt     Score     Error   Units
measureStringFormat                                           5  avgt  100   892,806 ±  18,608   ns/op
measureConcatenation                                          5  avgt  100    22,706 ±   0,335   ns/op

measureStringFormat                                          10  avgt  100   925,551 ±  14,258   ns/op
measureConcatenation                                         10  avgt  100    25,235 ±   0,279   ns/op

measureStringFormat                                         100  avgt  100  1156,248 ±  66,727   ns/op
measureConcatenation                                        100  avgt  100   118,060 ±   1,031   ns/op

measureStringFormat                                         200  avgt  100  1245,966 ±  18,500   ns/op
measureConcatenation                                        200  avgt  100   219,081 ±   2,035   ns/op

measureConcatenation:·gc.alloc.rate.norm                      5  avgt  100    64,000 ±   0,001    B/op
measureStringFormat:·gc.alloc.rate.norm                       5  avgt  100  1064,001 ±   0,001    B/op

measureStringFormat:·gc.alloc.rate.norm                      10  avgt  100  1176,002 ±   0,001    B/op
measureConcatenation:·gc.alloc.rate.norm                     10  avgt  100    88,000 ±   0,001    B/op

measureStringFormat:·gc.alloc.rate.norm                     100  avgt  100  2092,802 ±   4,908    B/op
measureConcatenation:·gc.alloc.rate.norm                    100  avgt  100   448,000 ±   0,001    B/op

measureStringFormat:·gc.alloc.rate.norm                     200  avgt  100  3092,802 ±   4,908    B/op
measureConcatenation:·gc.alloc.rate.norm                    200  avgt  100   848,000 ±   0,001    B/op

Java 9

Benchmark                                              (length)  Mode  Cnt     Score    Error   Units
measureStringFormat                                           5  avgt  100   688,615 ±  7,749   ns/op
measureConcatenation                                          5  avgt  100    26,913 ±  0,223   ns/op

measureStringFormat                                          10  avgt  100   704,290 ±  8,939   ns/op
measureConcatenation                                         10  avgt  100    28,112 ±  0,414   ns/op

measureStringFormat                                         100  avgt  100   771,813 ±  7,887   ns/op
measureConcatenation                                        100  avgt  100    69,606 ±  1,624   ns/op

measureStringFormat                                         200  avgt  100   870,384 ±  9,260   ns/op
measureConcatenation                                        200  avgt  100   124,686 ±  1,252   ns/op

measureStringFormat:·gc.alloc.rate.norm                       5  avgt  100   744,001 ±  0,001    B/op
measureConcatenation:·gc.alloc.rate.norm                      5  avgt  100    56,000 ±  0,001    B/op

measureStringFormat:·gc.alloc.rate.norm                      10  avgt  100   808,001 ±  0,001    B/op
measureConcatenation:·gc.alloc.rate.norm                     10  avgt  100    64,000 ±  0,001    B/op

measureStringFormat:·gc.alloc.rate.norm                     100  avgt  100  1280,001 ±  0,001    B/op
measureConcatenation:·gc.alloc.rate.norm                    100  avgt  100   248,000 ±  0,001    B/op

measureStringFormat:·gc.alloc.rate.norm                     200  avgt  100  1776,001 ±  0,001    B/op
measureConcatenation:·gc.alloc.rate.norm                    200  avgt  100   448,000 ±  0,001    B/op


AllMatchVsContainsAllBenchmark

Java 8

Benchmark                                               (collectionType)  (count)  Mode  Cnt       Score     Error   Units
measureStreamAllMatch                                          arrayList        1  avgt  100      40,717 ±   0,361   ns/op
measureStreamAllMatch                                          arrayList       10  avgt  100     120,891 ±   0,804   ns/op
measureStreamAllMatch                                          arrayList      100  avgt  100    1816,771 ±  13,387   ns/op
measureStreamAllMatch                                          arrayList     1000  avgt  100  127548,710 ± 539,264   ns/op

measureCollectionContainsAll                                   arrayList        1  avgt  100       5,285 ±   0,071   ns/op
measureCollectionContainsAll                                   arrayList       10  avgt  100      55,861 ±   0,881   ns/op
measureCollectionContainsAll                                   arrayList      100  avgt  100    1659,937 ±  12,374   ns/op
measureCollectionContainsAll                                   arrayList     1000  avgt  100  128832,999 ± 940,077   ns/op

measureStreamAllMatch:·gc.alloc.rate.norm                      arrayList        1  avgt  100     160,000 ±   0,001    B/op
measureStreamAllMatch:·gc.alloc.rate.norm                      arrayList       10  avgt  100     160,000 ±   0,001    B/op
measureStreamAllMatch:·gc.alloc.rate.norm                      arrayList      100  avgt  100     160,003 ±   0,002    B/op
measureStreamAllMatch:·gc.alloc.rate.norm                      arrayList     1000  avgt  100     162,678 ±   2,528    B/op

measureCollectionContainsAll:·gc.alloc.rate.norm               arrayList        1  avgt  100      ? 10??              B/op
measureCollectionContainsAll:·gc.alloc.rate.norm               arrayList       10  avgt  100      ? 10??              B/op
measureCollectionContainsAll:·gc.alloc.rate.norm               arrayList      100  avgt  100       0,003 ±   0,002    B/op
measureCollectionContainsAll:·gc.alloc.rate.norm               arrayList     1000  avgt  100      17,146 ±   6,396    B/op

measureStreamAllMatch                                            hashSet        1  avgt  100      39,744 ±   0,429   ns/op
measureStreamAllMatch                                            hashSet       10  avgt  100     122,680 ±   2,589   ns/op
measureStreamAllMatch                                            hashSet      100  avgt  100     857,966 ±   4,909   ns/op
measureStreamAllMatch                                            hashSet     1000  avgt  100    7191,467 ± 246,045   ns/op

measureCollectionContainsAll                                     hashSet        1  avgt  100       5,308 ±   0,072   ns/op
measureCollectionContainsAll                                     hashSet       10  avgt  100      77,870 ±   0,388   ns/op
measureCollectionContainsAll                                     hashSet      100  avgt  100     716,692 ±   5,454   ns/op
measureCollectionContainsAll                                     hashSet     1000  avgt  100    5417,217 ± 251,531   ns/op

measureStreamAllMatch:·gc.alloc.rate.norm                        hashSet        1  avgt  100     160,000 ±   0,001    B/op
measureStreamAllMatch:·gc.alloc.rate.norm                        hashSet       10  avgt  100     160,000 ±   0,001    B/op
measureStreamAllMatch:·gc.alloc.rate.norm                        hashSet      100  avgt  100     160,001 ±   0,001    B/op
measureStreamAllMatch:·gc.alloc.rate.norm                        hashSet     1000  avgt  100     160,012 ±   0,009    B/op

measureCollectionContainsAll:·gc.alloc.rate.norm                 hashSet        1  avgt  100      ? 10??              B/op
measureCollectionContainsAll:·gc.alloc.rate.norm                 hashSet       10  avgt  100      ? 10??              B/op
measureCollectionContainsAll:·gc.alloc.rate.norm                 hashSet      100  avgt  100       0,001 ±   0,001    B/op
measureCollectionContainsAll:·gc.alloc.rate.norm                 hashSet     1000  avgt  100      32,009 ±   5,453    B/op

Java 9

Benchmark                                               (collectionType)  (count)  Mode  Cnt       Score      Error   Units
measureStreamAllMatch                                                  1        1  avgt  100      44,823 ±    0,311   ns/op
measureStreamAllMatch                                                  1       10  avgt  100     132,847 ±    2,338   ns/op
measureStreamAllMatch                                                  1      100  avgt  100    1809,536 ±   26,649   ns/op
measureStreamAllMatch                                                  1     1000  avgt  100  110056,371 ± 1209,667   ns/op

measureCollectionContainsAll                                           1        1  avgt  100       5,786 ±    0,076   ns/op
measureCollectionContainsAll                                           1       10  avgt  100      50,890 ±    0,414   ns/op
measureCollectionContainsAll                                           1      100  avgt  100    1606,019 ±    6,499   ns/op
measureCollectionContainsAll                                           1     1000  avgt  100  106198,418 ±  954,946   ns/op

measureCollectionContainsAll:·gc.alloc.rate.norm                       1        1  avgt  100      ? 10??               B/op
measureCollectionContainsAll:·gc.alloc.rate.norm                       1       10  avgt  100      ? 10??               B/op
measureCollectionContainsAll:·gc.alloc.rate.norm                       1      100  avgt  100       0,002 ±    0,002    B/op
measureCollectionContainsAll:·gc.alloc.rate.norm                       1     1000  avgt  100      40,155 ±    0,112    B/op

measureStreamAllMatch:·gc.alloc.rate.norm                              1        1  avgt  100     184,000 ±    0,001    B/op
measureStreamAllMatch:·gc.alloc.rate.norm                              1       10  avgt  100     184,000 ±    0,001    B/op
measureStreamAllMatch:·gc.alloc.rate.norm                              1      100  avgt  100     184,003 ±    0,002    B/op
measureStreamAllMatch:·gc.alloc.rate.norm                              1     1000  avgt  100     175,882 ±    5,760    B/op

measureStreamAllMatch                                            hashSet        1  avgt  100      45,380 ±    0,683   ns/op
measureStreamAllMatch                                            hashSet       10  avgt  100     137,537 ±    2,759   ns/op
measureStreamAllMatch                                            hashSet      100  avgt  100     784,174 ±   32,377   ns/op
measureStreamAllMatch                                            hashSet     1000  avgt  100    7910,102 ±  160,009   ns/op

measureCollectionContainsAll                                     hashSet        1  avgt  100       5,668 ±    0,097   ns/op
measureCollectionContainsAll                                     hashSet       10  avgt  100      68,238 ±    0,334   ns/op
measureCollectionContainsAll                                     hashSet      100  avgt  100     582,116 ±    1,394   ns/op
measureCollectionContainsAll                                     hashSet     1000  avgt  100    5760,107 ±   49,001   ns/op

measureStreamAllMatch:·gc.alloc.rate.norm                        hashSet        1  avgt  100     184,000 ±    0,001    B/op
measureStreamAllMatch:·gc.alloc.rate.norm                        hashSet       10  avgt  100     184,000 ±    0,001    B/op
measureStreamAllMatch:·gc.alloc.rate.norm                        hashSet      100  avgt  100     184,001 ±    0,001    B/op
measureStreamAllMatch:·gc.alloc.rate.norm                        hashSet     1000  avgt  100     184,011 ±    0,008    B/op

measureCollectionContainsAll:·gc.alloc.rate.norm                 hashSet        1  avgt  100      ? 10??               B/op
measureCollectionContainsAll:·gc.alloc.rate.norm                 hashSet       10  avgt  100      ? 10??               B/op
measureCollectionContainsAll:·gc.alloc.rate.norm                 hashSet      100  avgt  100       0,001 ±    0,001    B/op
measureCollectionContainsAll:·gc.alloc.rate.norm                 hashSet     1000  avgt  100       0,008 ±    0,006    B/op


--------------------- для доклада по IDEA ---------------------

StackBenchmark

Java 9

Benchmark             Mode  Cnt   Score     Error   Units
measureJdkStackPush   avgt   40  31,634 ±  18,912   ns/op
measureIdeaStackPush  avgt   40  21,358 ±   4,107   ns/op

measureJdkStackPeek   avgt   40  22,661 ±   0,104   ns/op
measureIdeaStackPeek  avgt   40   4,866 ±   0,214   ns/op

Java 8

Benchmark             Mode  Cnt   Score     Error   Units
measureJdkStackPush   avgt   40  46,676 ±  36,977   ns/op
measureIdeaStackPush  avgt   40  23,214 ±   9,022   ns/op

measureJdkStackPeek   avgt   40  22,709 ±   0,087   ns/op
measureIdeaStackPeek  avgt   40   4,768 ±   0,064   ns/op


------------------------------------------------------------------------------------------------------------
LoopVsStreamBenchmark

Java 8

Benchmark                                            (count)  Mode  Cnt      Score      Error   Units
measureOldMapping                                          1  avgt  500     32,824 ±    0,208   ns/op
measureIdeaMapping                                         1  avgt  500     32,139 ±    0,151   ns/op
measureStream                                              1  avgt  500     94,949 ±    0,847   ns/op
measureSizedStream                                         1  avgt  500     93,323 ±    0,867   ns/op

measureOldMapping                                         10  avgt  500     85,401 ±    0,643   ns/op
measureIdeaMapping                                        10  avgt  500     89,375 ±    1,894   ns/op
measureStream                                             10  avgt  500    170,608 ±    1,332   ns/op
measureSizedStream                                        10  avgt  500    175,193 ±    1,430   ns/op

measureOldMapping                                        100  avgt  500    594,746 ±    5,978   ns/op
measureIdeaMapping                                       100  avgt  500    623,551 ±   10,974   ns/op
measureStream                                            100  avgt  500   1185,007 ±    9,197   ns/op
measureSizedStream                                       100  avgt  500   1077,774 ±    8,747   ns/op

measureOldMapping                                       1000  avgt  500   6117,414 ±   42,749   ns/op
measureIdeaMapping                                      1000  avgt  500   6078,770 ±   56,251   ns/op
measureStream                                           1000  avgt  500  12145,044 ±   79,053   ns/op
measureSizedStream                                      1000  avgt  500  10133,314 ±   53,757   ns/op

measureOldMapping:·gc.alloc.rate.norm                      1  avgt  500     48,000 ±    0,001    B/op
measureIdeaMapping:·gc.alloc.rate.norm                     1  avgt  500     48,000 ±    0,001    B/op
measureStream:·gc.alloc.rate.norm                          1  avgt  500    345,600 ±    2,173    B/op
measureSizedStream:·gc.alloc.rate.norm                     1  avgt  500    323,200 ±    1,423    B/op

measureOldMapping:·gc.alloc.rate.norm                     10  avgt  500     80,000 ±    0,001    B/op
measureIdeaMapping:·gc.alloc.rate.norm                    10  avgt  500     80,000 ±    0,001    B/op
measureStream:·gc.alloc.rate.norm                         10  avgt  500    342,400 ±    1,897    B/op
measureSizedStream:·gc.alloc.rate.norm                    10  avgt  500    358,400 ±    1,897    B/op

measureOldMapping:·gc.alloc.rate.norm                    100  avgt  500    440,000 ±    0,001    B/op
measureIdeaMapping:·gc.alloc.rate.norm                   100  avgt  500    440,000 ±    0,001    B/op
measureStream:·gc.alloc.rate.norm                        100  avgt  500   1659,201 ±    1,423    B/op
measureSizedStream:·gc.alloc.rate.norm                   100  avgt  500    712,001 ±    0,001    B/op

measureOldMapping:·gc.alloc.rate.norm                   1000  avgt  500   4040,004 ±    0,002    B/op
measureIdeaMapping:·gc.alloc.rate.norm                  1000  avgt  500   4043,204 ±    1,423    B/op
measureStream:·gc.alloc.rate.norm                       1000  avgt  500  15280,008 ±    0,003    B/op
measureSizedStream:·gc.alloc.rate.norm                  1000  avgt  500   4312,007 ±    0,003    B/op


Java 9

Benchmark                                       (count)  Mode  Cnt      Score      Error   Units
measureOldMapping                                     1  avgt  500     17,508 ±    0,045   ns/op
measureIdeaMapping                                    1  avgt  500     18,001 ±    0,122   ns/op
measureStream                                         1  avgt  500     87,127 ±    0,628   ns/op
measureSizedStream                                    1  avgt  500     86,495 ±    0,837   ns/op

measureOldMapping                                    10  avgt  500     90,494 ±    0,283   ns/op
measureIdeaMapping                                   10  avgt  500     94,352 ±    0,386   ns/op
measureStream                                        10  avgt  500    167,208 ±    3,366   ns/op
measureSizedStream                                   10  avgt  500    152,179 ±    2,946   ns/op

measureOldMapping                                   100  avgt  500    802,145 ±    2,157   ns/op
measureIdeaMapping                                  100  avgt  500    822,535 ±    3,026   ns/op
measureStream                                       100  avgt  500   1189,856 ±    8,418   ns/op
measureSizedStream                                  100  avgt  500    748,411 ±   24,534   ns/op

measureOldMapping                                  1000  avgt  500   7916,526 ±   33,633   ns/op
measureIdeaMapping                                 1000  avgt  500   7865,431 ±   29,385   ns/op
measureStream                                      1000  avgt  500   8795,942 ±  245,081   ns/op
measureSizedStream                                 1000  avgt  500   7916,733 ±  313,935   ns/op

measureOldMapping:·gc.alloc.rate.norm                 1  avgt  500     48,000 ±    0,001    B/op
measureIdeaMapping:·gc.alloc.rate.norm                1  avgt  500     48,000 ±    0,001    B/op
measureStream:·gc.alloc.rate.norm                     1  avgt  500    355,200 ±    2,323    B/op
measureSizedStream:·gc.alloc.rate.norm                1  avgt  500    342,400 ±    2,173    B/op

measureOldMapping:·gc.alloc.rate.norm                10  avgt  500     80,000 ±    0,001    B/op
measureIdeaMapping:·gc.alloc.rate.norm               10  avgt  500     80,000 ±    0,001    B/op
measureStream:·gc.alloc.rate.norm                    10  avgt  500    364,800 ±    1,423    B/op
measureSizedStream:·gc.alloc.rate.norm               10  avgt  500    374,400 ±    2,173    B/op

measureOldMapping:·gc.alloc.rate.norm               100  avgt  500    440,000 ±    0,001    B/op
measureIdeaMapping:·gc.alloc.rate.norm              100  avgt  500    440,001 ±    0,001    B/op
measureStream:·gc.alloc.rate.norm                   100  avgt  500   1684,801 ±    1,423    B/op
measureSizedStream:·gc.alloc.rate.norm              100  avgt  500    737,600 ±    1,897    B/op

measureOldMapping:·gc.alloc.rate.norm              1000  avgt  500   4040,005 ±    0,002    B/op
measureIdeaMapping:·gc.alloc.rate.norm             1000  avgt  500   4040,005 ±    0,002    B/op
measureStream:·gc.alloc.rate.norm                  1000  avgt  500  15308,805 ±    1,423    B/op
measureSizedStream:·gc.alloc.rate.norm             1000  avgt  500   4340,805 ±    1,423    B/op


------------------------------------------------------------------------------------------------------------

LockFreeVsJdkCOWArrayListBenchmark

Java 8

1 thread
Benchmark          Mode  Cnt      Score      Error  Units
measureIdeaCOWAdd  avgt  500    215,601 ±    5,079  us/op
measureJdkCOWAdd   avgt  500    213,318 ±    3,875  us/op

2 threads
Benchmark          Mode  Cnt      Score      Error  Units
measureIdeaCOWAdd  avgt  500    636,524 ±   18,110  us/op
measureJdkCOWAdd   avgt  500   1559,366 ± 3401,226  us/op

4 threads
Benchmark          Mode  Cnt      Score      Error  Units
measureIdeaCOWAdd  avgt  500   1884,205 ±   48,203  us/op
measureJdkCOWAdd   avgt  500  11384,638 ± 6497,083  us/op

8 threads
Benchmark          Mode  Cnt      Score      Error  Units
measureIdeaCOWAdd  avgt  500   4234,200 ±   97,897  us/op
measureJdkCOWAdd   avgt  500  40497,404 ± 9529,448  us/op

Java 9

1 thread
Benchmark          Mode  Cnt      Score      Error  Units
measureIdeaCOWAdd  avgt  500    165,706 ±    4,391  us/op
measureJdkCOWAdd   avgt  500    161,120 ±    2,945  us/op

2 threads
Benchmark          Mode  Cnt      Score      Error  Units
measureIdeaCOWAdd  avgt  500    481,878 ±   10,505  us/op
measureJdkCOWAdd   avgt  500   2728,116 ± 5360,456  us/op

4 theads
Benchmark          Mode  Cnt      Score      Error  Units
measureIdeaCOWAdd  avgt  500   1559,028 ±   40,373  us/op
measureJdkCOWAdd   avgt  500   2458,943 ± 1590,451  us/op

8 threads
Benchmark          Mode  Cnt      Score      Error  Units
measureIdeaCOWAdd  avgt  500   3718,412 ±  221,349  us/op
measureJdkCOWAdd   avgt  500  31699,583 ± 6896,530  us/op

------------------------------------------------------------------------------------------------------------

Java 8

"C:\Program Files\Java\jdk1.8.0_144\bin\java" -jar target/benchmarks.jar

EnhancedEmptyPrimitiveHashSetBenchmark
EnhancedNonEmptyPrimitiveHashSetBenchmark
EnhancedEmptyPrimitiveSmartListBenchmark
EnhancedNonEmptyPrimitiveSmartListBenchmark
EnhancedEmptyHashSetBenchmark
EnhancedNonEmptyHashSetBenchmark
EnhancedEmptySmartListBenchmark
EnhancedNonEmptySmartListBenchmark

-f 200 -wi 10 -i 10 --jvmArgsAppend="-XX:+UseParallelGC -Xms4g -Xmx4g" -foe true


Benchmark                                                                                    Mode   Cnt   Score   Error  Units
EnhancedEmptyHashSetBenchmark.measureContainsAllInEmptyIdeaHashSet                           avgt  2000   4,075 ± 0,006  ns/op
EnhancedEmptyHashSetBenchmark.measureContainsAllInEmptyJdkHashSet                            avgt  2000  10,507 ± 0,031  ns/op

EnhancedEmptyHashSetBenchmark.measureContainsInEmptyIdeaHashSet                              avgt  2000   3,456 ± 0,006  ns/op
EnhancedEmptyHashSetBenchmark.measureContainsInEmptyJdkHashSet                               avgt  2000   4,090 ± 0,007  ns/op

EnhancedNonEmptyHashSetBenchmark.measureContainsAllInNonEmptyIdeaHashSet                     avgt  2000  13,864 ± 0,026  ns/op
EnhancedNonEmptyHashSetBenchmark.measureContainsAllInNonEmptyJdkHashSet                      avgt  2000  12,400 ± 0,024  ns/op

EnhancedNonEmptyHashSetBenchmark.measureContainsInNonEmptyIdeaHashSet                        avgt  2000   5,954 ± 0,016  ns/op
EnhancedNonEmptyHashSetBenchmark.measureContainsInNonEmptyJdkHashSet                         avgt  2000   6,275 ± 0,021  ns/op

EnhancedEmptySmartListBenchmark.measureEnhancedContainsAll                                   avgt  2000   3,324 ± 0,014  ns/op
EnhancedEmptySmartListBenchmark.measureConventionalContainsAll                               avgt  2000   4,365 ± 0,006  ns/op

EnhancedNonEmptySmartListBenchmark.measureEnhancedContainsAll                                avgt  2000   8,035 ± 0,019  ns/op
EnhancedNonEmptySmartListBenchmark.measureConventionalContainsAll                            avgt  2000   8,035 ± 0,027  ns/op


primitive.EnhancedEmptyPrimitiveHashSetBenchmark.measureContainsAllInEmptyIdeaHashSet        avgt  2000   3,680 ± 0,008  ns/op
primitive.EnhancedEmptyPrimitiveHashSetBenchmark.measureContainsAllInEmptyJdkHashSet         avgt  2000  10,117 ± 0,026  ns/op

primitive.EnhancedEmptyPrimitiveHashSetBenchmark.measureContainsInEmptyIdeaHashSet           avgt  2000   3,124 ± 0,006  ns/op
primitive.EnhancedEmptyPrimitiveHashSetBenchmark.measureContainsInEmptyJdkHashSet            avgt  2000   4,125 ± 0,009  ns/op

primitive.EnhancedNonEmptyPrimitiveHashSetBenchmark.measureContainsAllInNonEmptyIdeaHashSet  avgt  2000  13,748 ± 0,019  ns/op
primitive.EnhancedNonEmptyPrimitiveHashSetBenchmark.measureContainsAllInNonEmptyJdkHashSet   avgt  2000  12,574 ± 0,036  ns/op

primitive.EnhancedNonEmptyPrimitiveHashSetBenchmark.measureContainsInNonEmptyIdeaHashSet     avgt  2000   5,962 ± 0,012  ns/op
primitive.EnhancedNonEmptyPrimitiveHashSetBenchmark.measureContainsInNonEmptyJdkHashSet      avgt  2000   6,250 ± 0,019  ns/op

primitive.EnhancedEmptyPrimitiveSmartListBenchmark.measureEnhancedContainsAll                avgt  2000   3,331 ± 0,013  ns/op
primitive.EnhancedEmptyPrimitiveSmartListBenchmark.measureConventionalContainsAll            avgt  2000   4,383 ± 0,009  ns/op

primitive.EnhancedNonEmptyPrimitiveSmartListBenchmark.measureEnhancedContainsAll             avgt  2000   8,260 ± 0,014  ns/op
primitive.EnhancedNonEmptyPrimitiveSmartListBenchmark.measureConventionalContainsAll         avgt  2000   8,050 ± 0,023  ns/op
