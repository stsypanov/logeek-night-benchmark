25.10.2017

JDK 8 / JRE 8

Benchmark                                       								Mode  Cnt    Score     Error   Units
MergeBenchmark.measureModifyCallingSave         								avgt  500  150,972 	 ± 2,859   us/op
MergeBenchmark.measureModifyWithoutCallingSave  								avgt  500  139,684 	 ± 1,320   us/op

MergeBenchmark.measureModifyCallingSave:·gc.alloc.rate.norm                     avgt  500  45530,392 ± 20,149  B/op
MergeBenchmark.measureModifyWithoutCallingSave:·gc.alloc.rate.norm              avgt  500  43245,317 ± 13,598  B/op

JDK 8 / JRE 8

-f 10 -wi 20 -m 50

Benchmark                                          (count)  Mode  Cnt     Score    Error  Units
ArrayCopyBenchmark.measureArraysCopyOf                   1  avgt  500    10,609 ±  0,107  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForEach        1  avgt  500    18,774 ±  0,115  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForI           1  avgt  500    18,828 ±  0,131  ns/op
ArrayCopyBenchmark.measureClone                          1  avgt  500    11,342 ±  0,088  ns/op

ArrayCopyBenchmark.measureArraysCopyOf                   5  avgt  500    10,767 ±  0,095  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForEach        5  avgt  500    23,968 ±  0,155  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForI           5  avgt  500    22,832 ±  0,133  ns/op
ArrayCopyBenchmark.measureClone                          5  avgt  500    11,277 ±  0,088  ns/op

ArrayCopyBenchmark.measureArraysCopyOf                  10  avgt  500    11,974 ±  0,182  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForEach       10  avgt  500    25,223 ±  0,175  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForI          10  avgt  500    24,131 ±  0,173  ns/op
ArrayCopyBenchmark.measureClone                         10  avgt  500    12,142 ±  0,098  ns/op

ArrayCopyBenchmark.measureArraysCopyOf                  20  avgt  500    14,316 ±  0,708  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForEach       20  avgt  500    26,220 ±  0,176  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForI          20  avgt  500    25,691 ±  0,176  ns/op
ArrayCopyBenchmark.measureClone                         20  avgt  500    13,041 ±  0,117  ns/op

ArrayCopyBenchmark.measureArraysCopyOf                  50  avgt  500    19,393 ±  0,154  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForEach       50  avgt  500    33,719 ±  0,256  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForI          50  avgt  500    34,939 ±  0,279  ns/op
ArrayCopyBenchmark.measureClone                         50  avgt  500    17,747 ±  0,125  ns/op

ArrayCopyBenchmark.measureArraysCopyOf                 100  avgt  500    32,051 ±  0,223  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForEach      100  avgt  500    38,919 ±  0,337  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForI         100  avgt  500    41,394 ±  0,328  ns/op
ArrayCopyBenchmark.measureClone                        100  avgt  500    29,454 ±  0,149  ns/op

ArrayCopyBenchmark.measureArraysCopyOfWithForEach     1000  avgt  500   273,581 ±  1,805  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForI        1000  avgt  500   273,114 ±  1,772  ns/op
ArrayCopyBenchmark.measureArraysCopyOf                1000  avgt  500   255,063 ±  4,361  ns/op
ArrayCopyBenchmark.measureClone                       1000  avgt  500   253,063 ±  2,115  ns/op

ArrayCopyBenchmark.measureArraysCopyOf               10000  avgt  500  2455,143 ± 13,380  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForEach    10000  avgt  500  1891,878 ± 14,537  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForI       10000  avgt  500  1888,779 ± 13,804  ns/op
ArrayCopyBenchmark.measureClone                      10000  avgt  500  2480,795 ± 15,583  ns/op


-------------------------------------------------------------------------------------------------------------


JDK 8 / JRE 9

-f 10 -wi 20 -m 50

Benchmark                                          (count)  Mode  Cnt     Score    Error  Units
ArrayCopyBenchmark.measureArraysCopyOf                   1  avgt  500    11,166 ±  0,224  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForEach        1  avgt  500    12,671 ±  1,516  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForI           1  avgt  500     9,074 ±  0,106  ns/op
ArrayCopyBenchmark.measureClone                          1  avgt  500    11,601 ±  0,099  ns/op

ArrayCopyBenchmark.measureArraysCopyOf                   5  avgt  500    10,876 ±  0,207  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForEach        5  avgt  500    13,592 ±  0,269  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForI           5  avgt  500    12,439 ±  0,126  ns/op
ArrayCopyBenchmark.measureClone                          5  avgt  500    11,734 ±  0,113  ns/op

ArrayCopyBenchmark.measureArraysCopyOf                  10  avgt  500    11,844 ±  0,126  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForEach       10  avgt  500    14,695 ±  0,185  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForI          10  avgt  500    14,418 ±  0,159  ns/op
ArrayCopyBenchmark.measureClone                         10  avgt  500    12,421 ±  0,107  ns/op

ArrayCopyBenchmark.measureArraysCopyOf                  20  avgt  500    13,419 ±  0,451  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForEach       20  avgt  500    19,882 ±  0,403  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForI          20  avgt  500    18,855 ±  0,172  ns/op
ArrayCopyBenchmark.measureClone                         20  avgt  500    13,237 ±  0,108  ns/op

ArrayCopyBenchmark.measureArraysCopyOf                  50  avgt  500    20,792 ±  0,560  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForEach       50  avgt  500    34,059 ±  0,948  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForI          50  avgt  500    29,314 ±  0,251  ns/op
ArrayCopyBenchmark.measureClone                         50  avgt  500    18,576 ±  0,142  ns/op

ArrayCopyBenchmark.measureArraysCopyOf                 100  avgt  500    33,330 ±  0,848  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForEach      100  avgt  500    43,862 ±  0,394  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForI         100  avgt  500    42,662 ±  0,338  ns/op
ArrayCopyBenchmark.measureClone                        100  avgt  500    30,661 ±  0,157  ns/op

ArrayCopyBenchmark.measureArraysCopyOf                1000  avgt  500   299,060 ± 10,566  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForEach     1000  avgt  500   275,257 ±  4,603  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForI        1000  avgt  500   261,016 ±  1,976  ns/op
ArrayCopyBenchmark.measureClone                       1000  avgt  500   256,199 ±  1,160  ns/op

ArrayCopyBenchmark.measureArraysCopyOf               10000  avgt  500  2939,384 ± 73,870  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForEach    10000  avgt  500  1512,567 ± 34,683  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForI       10000  avgt  500  1419,036 ± 13,950  ns/op
ArrayCopyBenchmark.measureClone                      10000  avgt  500  2564,621 ± 15,126  ns/op

-------------------------------------------------------------------------------------------------------------

27.10.2017

JDK 8 / JRE 9

-f 10 -wi 20 -m 50

Benchmark                                                     (collectionType)  (size)  Mode  Cnt      Score     Error  Units
IteratorFromStreamBenchmark.measureForEach                                list      10  avgt  500    397,899 ±   3,742  ns/op
IteratorFromStreamBenchmark.measureIteratorFromStream                     list      10  avgt  500    618,878 ±   6,864  ns/op
IteratorFromStreamBenchmark.measureIteratorFromCollectedList              list      10  avgt  500    479,987 ±   6,310  ns/op

IteratorFromStreamBenchmark.measureForEach                                list     100  avgt  500   3333,892 ±  33,167  ns/op
IteratorFromStreamBenchmark.measureIteratorFromStream                     list     100  avgt  500   5819,927 ± 160,011  ns/op
IteratorFromStreamBenchmark.measureIteratorFromCollectedList              list     100  avgt  500   4123,159 ±  57,694  ns/op

IteratorFromStreamBenchmark.measureForEach                                list    1000  avgt  500  35905,929 ± 358,069  ns/op
IteratorFromStreamBenchmark.measureIteratorFromStream                     list    1000  avgt  500  54665,916 ± 877,024  ns/op
IteratorFromStreamBenchmark.measureIteratorFromCollectedList              list    1000  avgt  500  45274,905 ± 927,043  ns/op

IteratorFromStreamBenchmark.measureForEach                                 set      10  avgt  500    492,351 ±  26,488  ns/op
IteratorFromStreamBenchmark.measureIteratorFromStream                      set      10  avgt  500    714,031 ±  11,948  ns/op
IteratorFromStreamBenchmark.measureIteratorFromCollectedList               set      10  avgt  500    556,542 ±   5,880  ns/op

IteratorFromStreamBenchmark.measureForEach                                 set     100  avgt  500   4555,108 ±  61,825  ns/op
IteratorFromStreamBenchmark.measureIteratorFromStream                      set     100  avgt  500   6156,478 ±  71,377  ns/op
IteratorFromStreamBenchmark.measureIteratorFromCollectedList               set     100  avgt  500   4860,118 ±  54,824  ns/op

IteratorFromStreamBenchmark.measureForEach                                 set    1000  avgt  500  54001,405 ± 955,434  ns/op
IteratorFromStreamBenchmark.measureIteratorFromStream                      set    1000  avgt  500  71602,788 ± 805,289  ns/op
IteratorFromStreamBenchmark.measureIteratorFromCollectedList               set    1000  avgt  500  57125,771 ± 586,272  ns/op

-------------------------------------------------------------------------------------------------------------

27.10.2017

JDK 8 / JRE 8

-f 10 -wi 20 -m 50

Benchmark                                             (count)  Mode  Cnt      Score     Error  Units
SetAddAllBenchmark.measureAddAllViaMethod                  10  avgt  500    230,978 ±   2,528  ns/op
SetAddAllBenchmark.measureAddAllViaUtilsAddAll             10  avgt  500    157,242 ±   2,069  ns/op
SetAddAllBenchmark.measureAddAllViaCollectionsAddAll       10  avgt  500    141,383 ±   2,125  ns/op

SetAddAllBenchmark.measureAddAllViaMethod                 100  avgt  500   2515,255 ±  22,154  ns/op
SetAddAllBenchmark.measureAddAllViaUtilsAddAll            100  avgt  500   1917,693 ±  20,533  ns/op
SetAddAllBenchmark.measureAddAllViaCollectionsAddAll      100  avgt  500   1837,411 ±  22,111  ns/op

SetAddAllBenchmark.measureAddAllViaMethod                1000  avgt  500  23647,743 ± 208,480  ns/op
SetAddAllBenchmark.measureAddAllViaUtilsAddAll           1000  avgt  500  17434,137 ± 256,017  ns/op
SetAddAllBenchmark.measureAddAllViaCollectionsAddAll     1000  avgt  500  17283,939 ± 181,051  ns/op

Каждый метод выполняется как отдельный БМ:

Benchmark                                             (count)  Mode  Cnt      Score     Error  Units
SetAddAllBenchmark.measureAddAllViaMethod                  10  avgt  500    282,224 ±   7,747  ns/op
SetAddAllBenchmark.measureAddAllViaMethod                 100  avgt  500   2973,791 ±  37,126  ns/op
SetAddAllBenchmark.measureAddAllViaMethod                1000  avgt  500  29377,079 ± 356,668  ns/op

Benchmark                                             (count)  Mode  Cnt      Score     Error  Units
SetAddAllBenchmark.measureAddAllViaCollectionsAddAll       10  avgt  500    172,077 ±   2,957  ns/op
SetAddAllBenchmark.measureAddAllViaCollectionsAddAll      100  avgt  500   1996,182 ±  18,654  ns/op
SetAddAllBenchmark.measureAddAllViaCollectionsAddAll     1000  avgt  500  18015,272 ± 156,627  ns/op

Benchmark                                             (count)  Mode  Cnt      Score     Error  Units
SetAddAllBenchmark.measureAddAllViaUtilsAddAll             10  avgt  500    177,535 ±   1,748  ns/op
SetAddAllBenchmark.measureAddAllViaUtilsAddAll            100  avgt  500   2115,596 ±  21,019  ns/op
SetAddAllBenchmark.measureAddAllViaUtilsAddAll           1000  avgt  500  18983,598 ± 183,482  ns/op

-------------------------------------------------------------------------------------------------------------

28.10.2017

JDK 8 / JRE 8

Дочерних сущностей нет. Каждый метод выполняется как отдельный БМ:

Benchmark                                                                 Mode  Cnt      Score       Error   Units
MergeBenchmark.measureModifyCallingSave                                   avgt   75    218,158 ±     7,144   us/op
MergeBenchmark.measureModifyCallingSave:·gc.alloc.rate.norm               avgt   75  56390,906 ±    40,427    B/op

Benchmark                                                                 Mode  Cnt      Score       Error   Units
MergeBenchmark.measureModifyWithoutCallingSave                            avgt   75    194,664 ±     6,843   us/op
MergeBenchmark.measureModifyWithoutCallingSave:·gc.alloc.rate.norm        avgt   75  53909,289 ±    42,828    B/op

Есть дочерняя сущность (@ManyToOne). Выполняем всё вместе:

-f 10 -wi 25 -m 100

Benchmark                                                                 Mode  Cnt      Score       Error   Units
MergeBenchmark.measureModifyCallingSave                                   avgt  1000    169,879 ?    0,799   us/op
MergeBenchmark.measureModifyCallingSave:·gc.alloc.rate.norm               avgt  1000  56310,147 ?   15,525    B/op

MergeBenchmark.measureModifyWithoutCallingSave                            avgt  1000    157,791 ?    0,367   us/op
MergeBenchmark.measureModifyWithoutCallingSave:·gc.alloc.rate.norm        avgt  1000  53843,984 ?    7,365    B/op

Есть дочерняя сущность (@ManyToOne). Каждый метод выполняется как отдельный БМ:

-f 10 -wi 25 -m 100

Benchmark                                                                 Mode   Cnt      Score      Error   Units
MergeBenchmark.measureModifyCallingSave                                   avgt  1000    192,661 ?    6,563   us/op
MergeBenchmark.measureModifyCallingSave:·gc.alloc.rate.norm               avgt  1000  56405,205 ?   15,219    B/op

Benchmark                                                                 Mode   Cnt      Score      Error   Units
MergeBenchmark.measureModifyWithoutCallingSave                            avgt  1000    166,671 ?    1,645   us/op
MergeBenchmark.measureModifyWithoutCallingSave:·gc.alloc.rate.norm        avgt  1000  53950,038 ?    9,270    B/op



Single entity (no associated entities)

Benchmark                                                                        Mode  Cnt     Score    Error  Units
MergeBenchmark.measureModifyCallingSave                                         thrpt  250  6685,743 ? 59,933  ops/s
MergeBenchmark.measureModifyWithoutCallingSave                                  thrpt  250  7174,665 ? 46,339  ops/s

MergeBenchmark.measureModifyCallingSave:·gc.alloc.rate.norm                      avgt  250  45662,979 ?   34,722    B/op
MergeBenchmark.measureModifyWithoutCallingSave:·gc.alloc.rate.norm               avgt  250  43389,307 ?   24,978    B/op


---------------------------------------------------------------------------------------------------------------------------

Many-To-One (1 child)

Benchmark                                                                        Mode  Cnt     Score       Error  Units
MergeBenchmark.measureModifyCallingSave                                         thrpt  250  6196,420  ?  227,393  ops/s
MergeBenchmark.measureModifyWithoutCallingSave                                  thrpt  250  7167,608  ?   51,598  ops/s

MergeBenchmark.measureModifyCallingSave:·gc.alloc.rate.norm                      avgt  250  45710,406 ?   31,620  B/op
MergeBenchmark.measureModifyWithoutCallingSave:·gc.alloc.rate.norm               avgt  250  43470,006 ?   33,582  B/op

----------------------------------------------------------------------------------------------------------------------------

One-to-Many (10 children)

Benchmark                                                                        Mode  Cnt     Score    Error  Units
MergeBenchmark.measureModifyCallingSave                                         thrpt  250  3806,259 ? 54,749  ops/s
MergeBenchmark.measureModifyWithoutCallingSave                                  thrpt  250  4161,794 ? 35,645  ops/s

MergeBenchmark.measureModifyCallingSave:·gc.alloc.rate.norm                      avgt  250  73141,790 ?    55,812    B/op
MergeBenchmark.measureModifyWithoutCallingSave:·gc.alloc.rate.norm               avgt  250  68077,917 ?    67,530    B/op


--------------------- для доклада Enterprise без тормозов

Benchmark                                                           (entityCount)  Mode  Cnt        Score         Error   Units
LoopVsSingleCallBenchmark.findInLoop                                           10  avgt  100      469,424 ±       8,099   us/op
LoopVsSingleCallBenchmark.findWithSingleCall                                   10  avgt  100      205,886 ±      11,615   us/op

LoopVsSingleCallBenchmark.findInLoop                                          100  avgt  100     1887,240 ±      83,701   us/op
LoopVsSingleCallBenchmark.findWithSingleCall                                  100  avgt  100      462,535 ±       6,892   us/op

LoopVsSingleCallBenchmark.findInLoop                                         1000  avgt  100    19355,030 ±     433,351   us/op
LoopVsSingleCallBenchmark.findWithSingleCall                                 1000  avgt  100    16812,107 ±    2208,749   us/op

LoopVsSingleCallBenchmark.findInLoop:·gc.alloc.rate.norm                       10  avgt  100   158802,101 ±     452,979    B/op
LoopVsSingleCallBenchmark.findWithSingleCall:·gc.alloc.rate.norm               10  avgt  100    83525,794 ±     105,359    B/op

LoopVsSingleCallBenchmark.findInLoop:·gc.alloc.rate.norm                      100  avgt  100   654327,272 ±    1148,819    B/op
LoopVsSingleCallBenchmark.findWithSingleCall:·gc.alloc.rate.norm              100  avgt  100   240181,020 ±      62,081    B/op

LoopVsSingleCallBenchmark.findInLoop:·gc.alloc.rate.norm                     1000  avgt  100  6279014,561 ±   19408,550    B/op
LoopVsSingleCallBenchmark.findWithSingleCall:·gc.alloc.rate.norm             1000  avgt  100  8117463,363 ±   27417,090    B/op


Benchmark                                                                          Mode  Cnt      Score      Error   Units
LazyTransactionBenchmark.measureLazyTransaction                                    avgt  100      1,368 ±    0,034   us/op
LazyTransactionBenchmark.measureEagerTransaction                                   avgt  100     34,516 ±    2,051   us/op

LazyTransactionBenchmark.measureLazyTransaction:·gc.alloc.rate.norm                avgt  100    520,001 ±    0,001    B/op
LazyTransactionBenchmark.measureEagerTransaction:·gc.alloc.rate.norm               avgt  100  11904,815 ±   25,272    B/op

Java 8

Benchmark                                                                              (collectionType)  (size)  Mode  Cnt      Score      Error   Units
IteratorFromStreamBenchmark.measureForEach                                                         list      10  avgt  100    539,663 ±    3,865   ns/op
IteratorFromStreamBenchmark.measureIteratorFromStream                                              list      10  avgt  100    802,860 ±    9,600   ns/op
IteratorFromStreamBenchmark.measureIteratorFromCollectedList                                       list      10  avgt  100    628,270 ±   11,582   ns/op

IteratorFromStreamBenchmark.measureForEach                                                         list     100  avgt  100   5009,942 ±   37,940   ns/op
IteratorFromStreamBenchmark.measureIteratorFromStream                                              list     100  avgt  100   7121,474 ±  131,639   ns/op
IteratorFromStreamBenchmark.measureIteratorFromCollectedList                                       list     100  avgt  100   5570,164 ±   36,062   ns/op

IteratorFromStreamBenchmark.measureForEach                                                         list    1000  avgt  100  52946,050 ± 1459,283   ns/op
IteratorFromStreamBenchmark.measureIteratorFromStream                                              list    1000  avgt  100  76045,745 ± 1458,132   ns/op
IteratorFromStreamBenchmark.measureIteratorFromCollectedList                                       list    1000  avgt  100  62056,434 ± 2977,828   ns/op

IteratorFromStreamBenchmark.measureForEach:·gc.alloc.rate.norm                                     list      10  avgt  100    855,200 ±    0,818    B/op
IteratorFromStreamBenchmark.measureIteratorFromStream:·gc.alloc.rate.norm                          list      10  avgt  100   1054,400 ±    1,091    B/op
IteratorFromStreamBenchmark.measureIteratorFromCollectedList:·gc.alloc.rate.norm                   list      10  avgt  100    960,000 ±    2,987    B/op

IteratorFromStreamBenchmark.measureForEach:·gc.alloc.rate.norm                                     list     100  avgt  100   6600,002 ±    2,112    B/op
IteratorFromStreamBenchmark.measureIteratorFromStream:·gc.alloc.rate.norm                          list     100  avgt  100   6784,003 ±    2,112    B/op
IteratorFromStreamBenchmark.measureIteratorFromCollectedList:·gc.alloc.rate.norm                   list     100  avgt  100   8049,602 ±    4,189    B/op

IteratorFromStreamBenchmark.measureForEach:·gc.alloc.rate.norm                                     list    1000  avgt  100  64010,423 ±   11,827    B/op
IteratorFromStreamBenchmark.measureIteratorFromStream:·gc.alloc.rate.norm                          list    1000  avgt  100  64205,633 ±   18,090    B/op
IteratorFromStreamBenchmark.measureIteratorFromCollectedList:·gc.alloc.rate.norm                   list    1000  avgt  100  79097,627 ±   12,244    B/op

IteratorFromStreamBenchmark.measureForEach                                                          set      10  avgt  100    636,313 ±   14,099   ns/op
IteratorFromStreamBenchmark.measureIteratorFromCollectedList                                        set      10  avgt  100    780,868 ±   18,441   ns/op
IteratorFromStreamBenchmark.measureIteratorFromStream                                               set      10  avgt  100    853,301 ±    8,823   ns/op

IteratorFromStreamBenchmark.measureForEach                                                          set     100  avgt  100   6424,974 ±  553,441   ns/op
IteratorFromStreamBenchmark.measureIteratorFromStream                                               set     100  avgt  100   7309,634 ±  103,849   ns/op
IteratorFromStreamBenchmark.measureIteratorFromCollectedList                                        set     100  avgt  100   6744,272 ±   78,717   ns/op

IteratorFromStreamBenchmark.measureForEach                                                          set    1000  avgt  100  66635,240 ± 1211,282   ns/op
IteratorFromStreamBenchmark.measureIteratorFromStream                                               set    1000  avgt  100  86997,079 ± 2141,281   ns/op
IteratorFromStreamBenchmark.measureIteratorFromCollectedList                                        set    1000  avgt  100  72514,557 ±  703,861   ns/op

IteratorFromStreamBenchmark.measureForEach:·gc.alloc.rate.norm                                      set      10  avgt  100    861,600 ±    1,250    B/op
IteratorFromStreamBenchmark.measureIteratorFromStream:·gc.alloc.rate.norm                           set      10  avgt  100   1060,800 ±    1,809    B/op
IteratorFromStreamBenchmark.measureIteratorFromCollectedList:·gc.alloc.rate.norm                    set      10  avgt  100    967,200 ±    3,329    B/op

IteratorFromStreamBenchmark.measureForEach:·gc.alloc.rate.norm                                      set     100  avgt  100   6607,203 ±    3,328    B/op
IteratorFromStreamBenchmark.measureIteratorFromStream:·gc.alloc.rate.norm                           set     100  avgt  100   6804,003 ±    4,604    B/op
IteratorFromStreamBenchmark.measureIteratorFromCollectedList:·gc.alloc.rate.norm                    set     100  avgt  100   8060,003 ±    3,709    B/op

IteratorFromStreamBenchmark.measureForEach:·gc.alloc.rate.norm                                      set    1000  avgt  100  63988,829 ±   11,836    B/op
IteratorFromStreamBenchmark.measureIteratorFromStream:·gc.alloc.rate.norm                           set    1000  avgt  100  64199,238 ±   11,534    B/op
IteratorFromStreamBenchmark.measureIteratorFromCollectedList:·gc.alloc.rate.norm                    set    1000  avgt  100  79109,632 ±    8,713    B/op

Java 9




Benchmark                                                                                  Mode  Cnt     Score    Error   Units
CachedFormatterBenchmark.measureDateTimeFormatterWhenDateConverted                         avgt  500   384,858 ±  3,791   ns/op
CachedFormatterBenchmark.measureSimpleDateTimeFormatter                                    avgt  500  1106,523 ±  5,522   ns/op

CachedFormatterBenchmark.measureDateTimeFormatterWhenDateConverted:·gc.alloc.rate.norm     avgt  500   500,800 ±  0,948    B/op
CachedFormatterBenchmark.measureSimpleDateTimeFormatter:·gc.alloc.rate.norm                avgt  500  2016,001 ±  0,001    B/op


Benchmark                                                                                  Mode  Cnt     Score    Error   Units
CachedFormatterBenchmark.measureDateTimeFormatter                                          avgt  250   203,277 ±  3,980   ns/op
CachedFormatterBenchmark.measureSimpleDateTimeFormatter                                    avgt  250   271,580 ±  4,002   ns/op
CachedFormatterBenchmark.measureDateTimeFormatterWhenDateConverted                         avgt  250   323,640 ±  8,563   ns/op

CachedFormatterBenchmark.measureDateTimeFormatter:·gc.alloc.rate.norm                      avgt  250   288,000 ±  0,001    B/op
CachedFormatterBenchmark.measureSimpleDateTimeFormatter:·gc.alloc.rate.norm                avgt  250   560,000 ±  0,001    B/op
CachedFormatterBenchmark.measureDateTimeFormatterWhenDateConverted:·gc.alloc.rate          avgt  250   834,033 ± 12,614  MB/sec

BulkOperationBenchmark Java 9 ArrayList

Benchmark                                                                                (count)   Mode  Cnt      Score      Error   Units
BulkOperationBenchmark.measureAddOneByOne                                                     10  thrpt  100   9903,310 ±   31,690  ops/ms
BulkOperationBenchmark.measureAddAll_ArrayList                                                10  thrpt  100  15932,450 ±  124,986  ops/ms
BulkOperationBenchmark.measureAddAllViaConstructorArg_ArrayList                               10  thrpt  100  47161,439 ± 1346,698  ops/ms

BulkOperationBenchmark.measureAddOneByOne                                                    100  thrpt  100    947,420 ±    6,610  ops/ms
BulkOperationBenchmark.measureAddAll_ArrayList                                               100  thrpt  100   4497,081 ±   45,395  ops/ms
BulkOperationBenchmark.measureAddAllViaConstructorArg_ArrayList                              100  thrpt  100   8006,795 ±  237,731  ops/ms

BulkOperationBenchmark.measureAddOneByOne                                                   1000  thrpt  100     85,130 ±    0,839  ops/ms
BulkOperationBenchmark.measureAddAll_ArrayList                                              1000  thrpt  100    576,931 ±    2,734  ops/ms
BulkOperationBenchmark.measureAddAllViaConstructorArg_ArrayList                             1000  thrpt  100    938,726 ±   28,109  ops/ms

BulkOperationBenchmark.measureAddOneByOne:·gc.alloc.rate.norm                                 10  thrpt  100     80,000 ±    0,001    B/op
BulkOperationBenchmark.measureAddAll_ArrayList:·gc.alloc.rate.norm                            10  thrpt  100    136,000 ±    0,001    B/op
BulkOperationBenchmark.measureAddAllViaConstructorArg_ArrayList:·gc.alloc.rate.norm           10  thrpt  100     80,000 ±    0,001    B/op

BulkOperationBenchmark.measureAddOneByOne:·gc.alloc.rate.norm                                100  thrpt  100   1400,006 ±    0,001    B/op
BulkOperationBenchmark.measureAddAll_ArrayList:·gc.alloc.rate.norm                           100  thrpt  100    856,001 ±    0,001    B/op
BulkOperationBenchmark.measureAddAllViaConstructorArg_ArrayList:·gc.alloc.rate.norm          100  thrpt  100    440,001 ±    0,001    B/op

BulkOperationBenchmark.measureAddOneByOne:·gc.alloc.rate.norm                               1000  thrpt  100  15024,522 ±    0,013    B/op
BulkOperationBenchmark.measureAddAll_ArrayList:·gc.alloc.rate.norm                          1000  thrpt  100   8056,077 ±    0,002    B/op
BulkOperationBenchmark.measureAddAllViaConstructorArg_ArrayList:·gc.alloc.rate.norm         1000  thrpt  100   4040,048 ±    0,002    B/op

BulkOperationBenchmark Java 9 HahSet

BulkOperationBenchmark.measureAddOneByOne_HashSet                                             10  thrpt  100   5096,544 ±   31,118  ops/ms
BulkOperationBenchmark.measureAddAll_HashSet                                                  10  thrpt  100   4657,570 ±   77,032  ops/ms
BulkOperationBenchmark.measureAddAllViaConstructorArg_HashSet                                 10  thrpt  100   4551,167 ±   50,965  ops/ms

BulkOperationBenchmark.measureAddOneByOne_HashSet                                            100  thrpt  100    339,270 ±    2,674  ops/ms
BulkOperationBenchmark.measureAddAll_HashSet                                                 100  thrpt  100    316,472 ±    3,468  ops/ms
BulkOperationBenchmark.measureAddAllViaConstructorArg_HashSet                                100  thrpt  100    455,761 ±    3,331  ops/ms

BulkOperationBenchmark.measureAddOneByOne_HashSet                                           1000  thrpt  100     27,845 ±    1,205  ops/ms
BulkOperationBenchmark.measureAddAllViaConstructorArg_HashSet                               1000  thrpt  100     45,796 ±    0,425  ops/ms
BulkOperationBenchmark.measureAddAll_HashSet                                                1000  thrpt  100     27,448 ±    0,576  ops/ms

BulkOperationBenchmark.measureAddOneByOne_HashSet:·gc.alloc.rate.norm                         10  thrpt  100    464,000 ±    0,001    B/op
BulkOperationBenchmark.measureAddAll_HashSet:·gc.alloc.rate.norm                              10  thrpt  100    464,000 ±    0,001    B/op
BulkOperationBenchmark.measureAddAllViaConstructorArg_HashSet:·gc.alloc.rate.norm             10  thrpt  100    464,000 ±    0,001    B/op

BulkOperationBenchmark.measureAddOneByOne_HashSet:·gc.alloc.rate.norm                        100  thrpt  100   5328,018 ±    0,003    B/op
BulkOperationBenchmark.measureAddAll_HashSet:·gc.alloc.rate.norm                             100  thrpt  100   5328,019 ±    0,003    B/op
BulkOperationBenchmark.measureAddAllViaConstructorArg_HashSet:·gc.alloc.rate.norm            100  thrpt  100   4304,013 ±    0,002    B/op

BulkOperationBenchmark.measureAddOneByOne_HashSet:·gc.alloc.rate.norm                       1000  thrpt  100  48513,626 ±    0,087    B/op
BulkOperationBenchmark.measureAddAll_HashSet:·gc.alloc.rate.norm                            1000  thrpt  100  48513,624 ±    0,052    B/op
BulkOperationBenchmark.measureAddAllViaConstructorArg_HashSet:·gc.alloc.rate.norm           1000  thrpt  100  40272,970 ±    0,026    B/op


BulkOperationBenchmark Java 8


Benchmark                                                                                         (count)   Mode  Cnt      Score      Error   Units
BulkOperationBenchmark.measureAddAllViaConstructorArg_ArrayList                                        10  thrpt  100  50533,331 ±  542,651  ops/ms
BulkOperationBenchmark.measureAddAllViaConstructorArg_ArrayList:·gc.alloc.rate                         10  thrpt  100   2565,113 ±   26,734  MB/sec
BulkOperationBenchmark.measureAddAllViaConstructorArg_ArrayList:·gc.alloc.rate.norm                    10  thrpt  100     80,000 ±    0,001    B/op
BulkOperationBenchmark.measureAddAllViaConstructorArg_ArrayList:·gc.churn.PS_Eden_Space                10  thrpt  100   2564,063 ±   49,650  MB/sec
BulkOperationBenchmark.measureAddAllViaConstructorArg_ArrayList:·gc.churn.PS_Eden_Space.norm           10  thrpt  100     79,961 ±    1,264    B/op
BulkOperationBenchmark.measureAddAllViaConstructorArg_ArrayList:·gc.churn.PS_Survivor_Space            10  thrpt  100      0,067 ±    0,011  MB/sec
BulkOperationBenchmark.measureAddAllViaConstructorArg_ArrayList:·gc.churn.PS_Survivor_Space.norm       10  thrpt  100      0,002 ±    0,001    B/op
BulkOperationBenchmark.measureAddAllViaConstructorArg_ArrayList:·gc.count                              10  thrpt  100   1233,000             counts
BulkOperationBenchmark.measureAddAllViaConstructorArg_ArrayList:·gc.time                               10  thrpt  100    979,000                 ms
BulkOperationBenchmark.measureAddAllViaConstructorArg_ArrayList                                       100  thrpt  100   9329,004 ±   56,497  ops/ms
BulkOperationBenchmark.measureAddAllViaConstructorArg_ArrayList:·gc.alloc.rate                        100  thrpt  100   2602,016 ±   15,696  MB/sec
BulkOperationBenchmark.measureAddAllViaConstructorArg_ArrayList:·gc.alloc.rate.norm                   100  thrpt  100    440,001 ±    0,001    B/op
BulkOperationBenchmark.measureAddAllViaConstructorArg_ArrayList:·gc.churn.PS_Eden_Space               100  thrpt  100   2601,119 ±   47,189  MB/sec
BulkOperationBenchmark.measureAddAllViaConstructorArg_ArrayList:·gc.churn.PS_Eden_Space.norm          100  thrpt  100    439,795 ±    7,137    B/op
BulkOperationBenchmark.measureAddAllViaConstructorArg_ArrayList:·gc.churn.PS_Survivor_Space           100  thrpt  100      0,062 ±    0,010  MB/sec
BulkOperationBenchmark.measureAddAllViaConstructorArg_ArrayList:·gc.churn.PS_Survivor_Space.norm      100  thrpt  100      0,010 ±    0,002    B/op
BulkOperationBenchmark.measureAddAllViaConstructorArg_ArrayList:·gc.count                             100  thrpt  100   1134,000             counts
BulkOperationBenchmark.measureAddAllViaConstructorArg_ArrayList:·gc.time                              100  thrpt  100   1040,000                 ms
BulkOperationBenchmark.measureAddAllViaConstructorArg_ArrayList                                      1000  thrpt  100   1012,205 ±    8,009  ops/ms
BulkOperationBenchmark.measureAddAllViaConstructorArg_ArrayList:·gc.alloc.rate                       1000  thrpt  100   2592,251 ±   20,646  MB/sec
BulkOperationBenchmark.measureAddAllViaConstructorArg_ArrayList:·gc.alloc.rate.norm                  1000  thrpt  100   4040,044 ±    0,001    B/op
BulkOperationBenchmark.measureAddAllViaConstructorArg_ArrayList:·gc.churn.PS_Eden_Space              1000  thrpt  100   2589,437 ±   49,463  MB/sec
BulkOperationBenchmark.measureAddAllViaConstructorArg_ArrayList:·gc.churn.PS_Eden_Space.norm         1000  thrpt  100   4036,007 ±   71,990    B/op
BulkOperationBenchmark.measureAddAllViaConstructorArg_ArrayList:·gc.churn.PS_Survivor_Space          1000  thrpt  100      0,065 ±    0,010  MB/sec
BulkOperationBenchmark.measureAddAllViaConstructorArg_ArrayList:·gc.churn.PS_Survivor_Space.norm     1000  thrpt  100      0,102 ±    0,016    B/op
BulkOperationBenchmark.measureAddAllViaConstructorArg_ArrayList:·gc.count                            1000  thrpt  100   1094,000             counts
BulkOperationBenchmark.measureAddAllViaConstructorArg_ArrayList:·gc.time                             1000  thrpt  100    941,000                 ms
BulkOperationBenchmark.measureAddAllViaConstructorArg_HashSet                                          10  thrpt  100   4164,389 ±  288,726  ops/ms
BulkOperationBenchmark.measureAddAllViaConstructorArg_HashSet:·gc.alloc.rate                           10  thrpt  100   1239,352 ±   84,261  MB/sec
BulkOperationBenchmark.measureAddAllViaConstructorArg_HashSet:·gc.alloc.rate.norm                      10  thrpt  100    467,201 ±    3,272    B/op
BulkOperationBenchmark.measureAddAllViaConstructorArg_HashSet:·gc.churn.PS_Eden_Space                  10  thrpt  100   1233,993 ±   93,577  MB/sec
BulkOperationBenchmark.measureAddAllViaConstructorArg_HashSet:·gc.churn.PS_Eden_Space.norm             10  thrpt  100    467,530 ±   22,904    B/op
BulkOperationBenchmark.measureAddAllViaConstructorArg_HashSet:·gc.churn.PS_Survivor_Space              10  thrpt  100      0,039 ±    0,010  MB/sec
BulkOperationBenchmark.measureAddAllViaConstructorArg_HashSet:·gc.churn.PS_Survivor_Space.norm         10  thrpt  100      0,014 ±    0,003    B/op
BulkOperationBenchmark.measureAddAllViaConstructorArg_HashSet:·gc.count                                10  thrpt  100    624,000             counts
BulkOperationBenchmark.measureAddAllViaConstructorArg_HashSet:·gc.time                                 10  thrpt  100   2173,000                 ms
BulkOperationBenchmark.measureAddAllViaConstructorArg_HashSet                                         100  thrpt  100    470,436 ±   29,268  ops/ms
BulkOperationBenchmark.measureAddAllViaConstructorArg_HashSet:·gc.alloc.rate                          100  thrpt  100   1295,331 ±   78,835  MB/sec
BulkOperationBenchmark.measureAddAllViaConstructorArg_HashSet:·gc.alloc.rate.norm                     100  thrpt  100   4304,013 ±    0,003    B/op
BulkOperationBenchmark.measureAddAllViaConstructorArg_HashSet:·gc.churn.PS_Eden_Space                 100  thrpt  100   1298,555 ±   94,227  MB/sec
BulkOperationBenchmark.measureAddAllViaConstructorArg_HashSet:·gc.churn.PS_Eden_Space.norm            100  thrpt  100   4299,490 ±  177,831    B/op
BulkOperationBenchmark.measureAddAllViaConstructorArg_HashSet:·gc.churn.PS_Survivor_Space             100  thrpt  100      0,036 ±    0,008  MB/sec
BulkOperationBenchmark.measureAddAllViaConstructorArg_HashSet:·gc.churn.PS_Survivor_Space.norm        100  thrpt  100      0,116 ±    0,026    B/op
BulkOperationBenchmark.measureAddAllViaConstructorArg_HashSet:·gc.count                               100  thrpt  100    511,000             counts
BulkOperationBenchmark.measureAddAllViaConstructorArg_HashSet:·gc.time                                100  thrpt  100   2539,000                 ms
BulkOperationBenchmark.measureAddAllViaConstructorArg_HashSet                                        1000  thrpt  100     50,658 ±    1,639  ops/ms
BulkOperationBenchmark.measureAddAllViaConstructorArg_HashSet:·gc.alloc.rate                         1000  thrpt  100   1302,769 ±   42,102  MB/sec
BulkOperationBenchmark.measureAddAllViaConstructorArg_HashSet:·gc.alloc.rate.norm                    1000  thrpt  100  40272,888 ±    0,059    B/op
BulkOperationBenchmark.measureAddAllViaConstructorArg_HashSet:·gc.churn.PS_Eden_Space                1000  thrpt  100   1300,080 ±   58,404  MB/sec
BulkOperationBenchmark.measureAddAllViaConstructorArg_HashSet:·gc.churn.PS_Eden_Space.norm           1000  thrpt  100  40123,369 ± 1089,721    B/op
BulkOperationBenchmark.measureAddAllViaConstructorArg_HashSet:·gc.churn.PS_Survivor_Space            1000  thrpt  100      0,063 ±    0,012  MB/sec
BulkOperationBenchmark.measureAddAllViaConstructorArg_HashSet:·gc.churn.PS_Survivor_Space.norm       1000  thrpt  100      1,907 ±    0,357    B/op
BulkOperationBenchmark.measureAddAllViaConstructorArg_HashSet:·gc.count                              1000  thrpt  100    911,000             counts
BulkOperationBenchmark.measureAddAllViaConstructorArg_HashSet:·gc.time                               1000  thrpt  100   1370,000                 ms
BulkOperationBenchmark.measureAddAll_ArrayList                                                         10  thrpt  100  21281,093 ±  700,690  ops/ms
BulkOperationBenchmark.measureAddAll_ArrayList:·gc.alloc.rate                                          10  thrpt  100   1849,145 ±   60,771  MB/sec
BulkOperationBenchmark.measureAddAll_ArrayList:·gc.alloc.rate.norm                                     10  thrpt  100    136,000 ±    0,001    B/op
BulkOperationBenchmark.measureAddAll_ArrayList:·gc.churn.PS_Eden_Space                                 10  thrpt  100   1839,728 ±   70,835  MB/sec
BulkOperationBenchmark.measureAddAll_ArrayList:·gc.churn.PS_Eden_Space.norm                            10  thrpt  100    135,363 ±    2,868    B/op
BulkOperationBenchmark.measureAddAll_ArrayList:·gc.churn.PS_Survivor_Space                             10  thrpt  100      0,061 ±    0,013  MB/sec
BulkOperationBenchmark.measureAddAll_ArrayList:·gc.churn.PS_Survivor_Space.norm                        10  thrpt  100      0,004 ±    0,001    B/op
BulkOperationBenchmark.measureAddAll_ArrayList:·gc.count                                               10  thrpt  100   1144,000             counts
BulkOperationBenchmark.measureAddAll_ArrayList:·gc.time                                                10  thrpt  100   2034,000                 ms
BulkOperationBenchmark.measureAddAll_ArrayList                                                        100  thrpt  100   4414,993 ±   99,168  ops/ms
BulkOperationBenchmark.measureAddAll_ArrayList:·gc.alloc.rate                                         100  thrpt  100   2410,298 ±   54,125  MB/sec
BulkOperationBenchmark.measureAddAll_ArrayList:·gc.alloc.rate.norm                                    100  thrpt  100    856,001 ±    0,001    B/op
BulkOperationBenchmark.measureAddAll_ArrayList:·gc.churn.PS_Eden_Space                                100  thrpt  100   2405,807 ±   72,633  MB/sec
BulkOperationBenchmark.measureAddAll_ArrayList:·gc.churn.PS_Eden_Space.norm                           100  thrpt  100    853,864 ±   14,621    B/op
BulkOperationBenchmark.measureAddAll_ArrayList:·gc.churn.PS_Survivor_Space                            100  thrpt  100      0,061 ±    0,011  MB/sec
BulkOperationBenchmark.measureAddAll_ArrayList:·gc.churn.PS_Survivor_Space.norm                       100  thrpt  100      0,022 ±    0,004    B/op
BulkOperationBenchmark.measureAddAll_ArrayList:·gc.count                                              100  thrpt  100   1067,000             counts
BulkOperationBenchmark.measureAddAll_ArrayList:·gc.time                                               100  thrpt  100   1210,000                 ms
BulkOperationBenchmark.measureAddAll_ArrayList                                                       1000  thrpt  100    387,833 ±   52,997  ops/ms
BulkOperationBenchmark.measureAddAll_ArrayList:·gc.alloc.rate                                        1000  thrpt  100   2004,268 ±  269,306  MB/sec
BulkOperationBenchmark.measureAddAll_ArrayList:·gc.alloc.rate.norm                                   1000  thrpt  100   8056,137 ±    0,028    B/op
BulkOperationBenchmark.measureAddAll_ArrayList:·gc.churn.PS_Eden_Space                               1000  thrpt  100   1998,126 ±  267,644  MB/sec
BulkOperationBenchmark.measureAddAll_ArrayList:·gc.churn.PS_Eden_Space.norm                          1000  thrpt  100   8157,976 ±  420,568    B/op
BulkOperationBenchmark.measureAddAll_ArrayList:·gc.churn.PS_Survivor_Space                           1000  thrpt  100      0,042 ±    0,009  MB/sec
BulkOperationBenchmark.measureAddAll_ArrayList:·gc.churn.PS_Survivor_Space.norm                      1000  thrpt  100      0,174 ±    0,031    B/op
BulkOperationBenchmark.measureAddAll_ArrayList:·gc.count                                             1000  thrpt  100    609,000             counts
BulkOperationBenchmark.measureAddAll_ArrayList:·gc.time                                              1000  thrpt  100  16242,000                 ms
BulkOperationBenchmark.measureAddAll_HashSet                                                           10  thrpt  100   5068,953 ±  211,106  ops/ms
BulkOperationBenchmark.measureAddAll_HashSet:·gc.alloc.rate                                            10  thrpt  100   1506,250 ±   57,790  MB/sec
BulkOperationBenchmark.measureAddAll_HashSet:·gc.alloc.rate.norm                                       10  thrpt  100    467,200 ±    3,272    B/op
BulkOperationBenchmark.measureAddAll_HashSet:·gc.churn.PS_Eden_Space                                   10  thrpt  100   1500,207 ±   79,738  MB/sec
BulkOperationBenchmark.measureAddAll_HashSet:·gc.churn.PS_Eden_Space.norm                              10  thrpt  100    463,053 ±   16,047    B/op
BulkOperationBenchmark.measureAddAll_HashSet:·gc.churn.PS_Survivor_Space                               10  thrpt  100      0,052 ±    0,010  MB/sec
BulkOperationBenchmark.measureAddAll_HashSet:·gc.churn.PS_Survivor_Space.norm                          10  thrpt  100      0,016 ±    0,003    B/op
BulkOperationBenchmark.measureAddAll_HashSet:·gc.count                                                 10  thrpt  100    900,000             counts
BulkOperationBenchmark.measureAddAll_HashSet:·gc.time                                                  10  thrpt  100    967,000                 ms
BulkOperationBenchmark.measureAddAll_HashSet                                                          100  thrpt  100    374,161 ±   20,587  ops/ms
BulkOperationBenchmark.measureAddAll_HashSet:·gc.alloc.rate                                           100  thrpt  100   1273,333 ±   67,926  MB/sec
BulkOperationBenchmark.measureAddAll_HashSet:·gc.alloc.rate.norm                                      100  thrpt  100   5331,217 ±    3,272    B/op
BulkOperationBenchmark.measureAddAll_HashSet:·gc.churn.PS_Eden_Space                                  100  thrpt  100   1275,256 ±   77,197  MB/sec
BulkOperationBenchmark.measureAddAll_HashSet:·gc.churn.PS_Eden_Space.norm                             100  thrpt  100   5332,450 ±  137,749    B/op
BulkOperationBenchmark.measureAddAll_HashSet:·gc.churn.PS_Survivor_Space                              100  thrpt  100      0,052 ±    0,011  MB/sec
BulkOperationBenchmark.measureAddAll_HashSet:·gc.churn.PS_Survivor_Space.norm                         100  thrpt  100      0,213 ±    0,046    B/op
BulkOperationBenchmark.measureAddAll_HashSet:·gc.count                                                100  thrpt  100    929,000             counts
BulkOperationBenchmark.measureAddAll_HashSet:·gc.time                                                 100  thrpt  100   8233,000                 ms
BulkOperationBenchmark.measureAddAll_HashSet                                                         1000  thrpt  100     30,716 ±    1,953  ops/ms
BulkOperationBenchmark.measureAddAll_HashSet:·gc.alloc.rate                                          1000  thrpt  100    951,343 ±   59,724  MB/sec
BulkOperationBenchmark.measureAddAll_HashSet:·gc.alloc.rate.norm                                     1000  thrpt  100  48516,712 ±    3,242    B/op
BulkOperationBenchmark.measureAddAll_HashSet:·gc.churn.PS_Eden_Space                                 1000  thrpt  100    948,904 ±   74,205  MB/sec
BulkOperationBenchmark.measureAddAll_HashSet:·gc.churn.PS_Eden_Space.norm                            1000  thrpt  100  48324,055 ± 2520,826    B/op
BulkOperationBenchmark.measureAddAll_HashSet:·gc.churn.PS_Survivor_Space                             1000  thrpt  100      0,063 ±    0,014  MB/sec
BulkOperationBenchmark.measureAddAll_HashSet:·gc.churn.PS_Survivor_Space.norm                        1000  thrpt  100      3,159 ±    0,665    B/op
BulkOperationBenchmark.measureAddAll_HashSet:·gc.count                                               1000  thrpt  100    836,000             counts
BulkOperationBenchmark.measureAddAll_HashSet:·gc.time                                                1000  thrpt  100   2543,000                 ms
BulkOperationBenchmark.measureAddOneByOne                                                              10  thrpt  100  10946,329 ±  202,674  ops/ms
BulkOperationBenchmark.measureAddOneByOne:·gc.alloc.rate                                               10  thrpt  100    557,638 ±   10,418  MB/sec
BulkOperationBenchmark.measureAddOneByOne:·gc.alloc.rate.norm                                          10  thrpt  100     80,000 ±    0,001    B/op
BulkOperationBenchmark.measureAddOneByOne:·gc.churn.PS_Eden_Space                                      10  thrpt  100    552,752 ±   24,844  MB/sec
BulkOperationBenchmark.measureAddOneByOne:·gc.churn.PS_Eden_Space.norm                                 10  thrpt  100     79,314 ±    3,293    B/op
BulkOperationBenchmark.measureAddOneByOne:·gc.churn.PS_Survivor_Space                                  10  thrpt  100      0,037 ±    0,009  MB/sec
BulkOperationBenchmark.measureAddOneByOne:·gc.churn.PS_Survivor_Space.norm                             10  thrpt  100      0,005 ±    0,001    B/op
BulkOperationBenchmark.measureAddOneByOne:·gc.count                                                    10  thrpt  100    721,000             counts
BulkOperationBenchmark.measureAddOneByOne:·gc.time                                                     10  thrpt  100    856,000                 ms
BulkOperationBenchmark.measureAddOneByOne                                                             100  thrpt  100   1102,233 ±   25,210  ops/ms
BulkOperationBenchmark.measureAddOneByOne:·gc.alloc.rate                                              100  thrpt  100    981,764 ±   22,321  MB/sec
BulkOperationBenchmark.measureAddOneByOne:·gc.alloc.rate.norm                                         100  thrpt  100   1400,006 ±    0,001    B/op
BulkOperationBenchmark.measureAddOneByOne:·gc.churn.PS_Eden_Space                                     100  thrpt  100    976,129 ±   37,556  MB/sec
BulkOperationBenchmark.measureAddOneByOne:·gc.churn.PS_Eden_Space.norm                                100  thrpt  100   1392,798 ±   46,902    B/op
BulkOperationBenchmark.measureAddOneByOne:·gc.churn.PS_Survivor_Space                                 100  thrpt  100      0,064 ±    0,014  MB/sec
BulkOperationBenchmark.measureAddOneByOne:·gc.churn.PS_Survivor_Space.norm                            100  thrpt  100      0,090 ±    0,019    B/op
BulkOperationBenchmark.measureAddOneByOne:·gc.count                                                   100  thrpt  100   1181,000             counts
BulkOperationBenchmark.measureAddOneByOne:·gc.time                                                    100  thrpt  100   1207,000                 ms
BulkOperationBenchmark.measureAddOneByOne                                                            1000  thrpt  100    106,904 ±    2,809  ops/ms
BulkOperationBenchmark.measureAddOneByOne:·gc.alloc.rate                                             1000  thrpt  100   1021,362 ±   26,523  MB/sec
BulkOperationBenchmark.measureAddOneByOne:·gc.alloc.rate.norm                                        1000  thrpt  100  15024,423 ±    0,020    B/op
BulkOperationBenchmark.measureAddOneByOne:·gc.churn.PS_Eden_Space                                    1000  thrpt  100   1024,939 ±   38,741  MB/sec
BulkOperationBenchmark.measureAddOneByOne:·gc.churn.PS_Eden_Space.norm                               1000  thrpt  100  15106,137 ±  496,568    B/op
BulkOperationBenchmark.measureAddOneByOne:·gc.churn.PS_Survivor_Space                                1000  thrpt  100      0,068 ±    0,013  MB/sec
BulkOperationBenchmark.measureAddOneByOne:·gc.churn.PS_Survivor_Space.norm                           1000  thrpt  100      0,998 ±    0,190    B/op
BulkOperationBenchmark.measureAddOneByOne:·gc.count                                                  1000  thrpt  100   1049,000             counts
BulkOperationBenchmark.measureAddOneByOne:·gc.time                                                   1000  thrpt  100   1091,000                 ms
BulkOperationBenchmark.measureAddOneByOne_HashSet                                                      10  thrpt  100   4188,508 ±  315,376  ops/ms
BulkOperationBenchmark.measureAddOneByOne_HashSet:·gc.alloc.rate                                       10  thrpt  100   1240,218 ±   92,031  MB/sec
BulkOperationBenchmark.measureAddOneByOne_HashSet:·gc.alloc.rate.norm                                  10  thrpt  100    464,001 ±    0,001    B/op
BulkOperationBenchmark.measureAddOneByOne_HashSet:·gc.churn.PS_Eden_Space                              10  thrpt  100   1233,853 ±  110,796  MB/sec
BulkOperationBenchmark.measureAddOneByOne_HashSet:·gc.churn.PS_Eden_Space.norm                         10  thrpt  100    461,484 ±   26,262    B/op
BulkOperationBenchmark.measureAddOneByOne_HashSet:·gc.churn.PS_Survivor_Space                          10  thrpt  100      0,037 ±    0,010  MB/sec
BulkOperationBenchmark.measureAddOneByOne_HashSet:·gc.churn.PS_Survivor_Space.norm                     10  thrpt  100      0,014 ±    0,003    B/op
BulkOperationBenchmark.measureAddOneByOne_HashSet:·gc.count                                            10  thrpt  100    461,000             counts
BulkOperationBenchmark.measureAddOneByOne_HashSet:·gc.time                                             10  thrpt  100   2631,000                 ms
BulkOperationBenchmark.measureAddOneByOne_HashSet                                                     100  thrpt  100    327,728 ±   22,047  ops/ms
BulkOperationBenchmark.measureAddOneByOne_HashSet:·gc.alloc.rate                                      100  thrpt  100   1113,142 ±   74,937  MB/sec
BulkOperationBenchmark.measureAddOneByOne_HashSet:·gc.alloc.rate.norm                                 100  thrpt  100   5328,020 ±    0,005    B/op
BulkOperationBenchmark.measureAddOneByOne_HashSet:·gc.churn.PS_Eden_Space                             100  thrpt  100   1113,708 ±   88,903  MB/sec
BulkOperationBenchmark.measureAddOneByOne_HashSet:·gc.churn.PS_Eden_Space.norm                        100  thrpt  100   5350,011 ±  272,506    B/op
BulkOperationBenchmark.measureAddOneByOne_HashSet:·gc.churn.PS_Survivor_Space                         100  thrpt  100      0,032 ±    0,009  MB/sec
BulkOperationBenchmark.measureAddOneByOne_HashSet:·gc.churn.PS_Survivor_Space.norm                    100  thrpt  100      0,149 ±    0,043    B/op
BulkOperationBenchmark.measureAddOneByOne_HashSet:·gc.count                                           100  thrpt  100    509,000             counts
BulkOperationBenchmark.measureAddOneByOne_HashSet:·gc.time                                            100  thrpt  100   2201,000                 ms
BulkOperationBenchmark.measureAddOneByOne_HashSet                                                    1000  thrpt  100     30,495 ±    1,593  ops/ms
BulkOperationBenchmark.measureAddOneByOne_HashSet:·gc.alloc.rate                                     1000  thrpt  100    942,958 ±   48,984  MB/sec
BulkOperationBenchmark.measureAddOneByOne_HashSet:·gc.alloc.rate.norm                                1000  thrpt  100  48513,503 ±    0,123    B/op
BulkOperationBenchmark.measureAddOneByOne_HashSet:·gc.churn.PS_Eden_Space                            1000  thrpt  100    939,939 ±   69,018  MB/sec
BulkOperationBenchmark.measureAddOneByOne_HashSet:·gc.churn.PS_Eden_Space.norm                       1000  thrpt  100  47997,179 ± 2354,573    B/op
BulkOperationBenchmark.measureAddOneByOne_HashSet:·gc.churn.PS_Survivor_Space                        1000  thrpt  100      0,055 ±    0,014  MB/sec
BulkOperationBenchmark.measureAddOneByOne_HashSet:·gc.churn.PS_Survivor_Space.norm                   1000  thrpt  100      2,778 ±    0,689    B/op
BulkOperationBenchmark.measureAddOneByOne_HashSet:·gc.count                                          1000  thrpt  100    640,000             counts
BulkOperationBenchmark.measureAddOneByOne_HashSet:·gc.time                                           1000  thrpt  100   1270,000                 ms




--------------------- для доклада Интересная идея

JDK 9

Benchmark                                                                                 Mode   Cnt     Score    Error   Units
ContainsInEmptyHashSetBenchmark.measureClearCustomHashSet                                 avgt  1000     3,571 ±  0,009   ns/op
ContainsInEmptyHashSetBenchmark.measureClearJdkHashSet                                    avgt  1000     4,594 ±  0,029   ns/op

ContainsInEmptyHashSetBenchmark.measureContainsAllInCustomHashSet                         avgt  1000     3,367 ±  0,007   ns/op
ContainsInEmptyHashSetBenchmark.measureContainsAllInJdkHashSet                            avgt  1000     9,780 ±  0,226   ns/op

ContainsInEmptyHashSetBenchmark.measureContainsInCustomHashSet                            avgt  1000     3,345 ±  0,011   ns/op
ContainsInEmptyHashSetBenchmark.measureContainsInJdkHashSet                               avgt  1000     4,374 ±  0,014   ns/op

-------- memory --------

ContainsInEmptyHashSetBenchmark.measureClearCustomHashSet:·gc.alloc.rate.norm             avgt  1000    ? 10??             B/op
ContainsInEmptyHashSetBenchmark.measureClearJdkHashSet:·gc.alloc.rate.norm                avgt  1000    ? 10??             B/op

ContainsInEmptyHashSetBenchmark.measureContainsAllInCustomHashSet:·gc.alloc.rate.norm     avgt  1000    ? 10??             B/op
ContainsInEmptyHashSetBenchmark.measureContainsAllInJdkHashSet:·gc.alloc.rate.norm        avgt  1000    19,200 ?  1,002    B/op

ContainsInEmptyHashSetBenchmark.measureContainsInCustomHashSet:·gc.alloc.rate.norm        avgt  1000    ? 10??             B/op
ContainsInEmptyHashSetBenchmark.measureContainsInJdkHashSet:·gc.alloc.rate.norm           avgt  1000    ? 10??             B/op

JDK 8

Benchmark                                                          Mode   Cnt  Score   Error  Units
ContainsInEmptyHashSetBenchmark.measureClearCustomHashSet          avgt  1000  3,719 ± 0,023  ns/op
ContainsInEmptyHashSetBenchmark.measureClearJdkHashSet             avgt  1000  4,519 ± 0,014  ns/op

ContainsInEmptyHashSetBenchmark.measureContainsAllInCustomHashSet  avgt  1000  3,401 ± 0,013  ns/op
ContainsInEmptyHashSetBenchmark.measureContainsAllInJdkHashSet     avgt  1000  8,460 ± 0,092  ns/op

ContainsInEmptyHashSetBenchmark.measureContainsInCustomHashSet     avgt  1000  3,398 ± 0,009  ns/op
ContainsInEmptyHashSetBenchmark.measureContainsInJdkHashSet        avgt  1000  3,979 ± 0,012  ns/op

Java 8

Benchmark                                                                           Mode  Cnt    Score     Error   Units
ContainsInEmptyHashSetBenchmark._measureSmartListContainsAll                        avgt   20    5,434 ±   0,628   ns/op
ContainsInEmptyHashSetBenchmark.measureSmartListContainsAll                         avgt   20   10,689 ±   4,140   ns/op

ContainsInEmptyHashSetBenchmark.measureSmartListContainsAll:·gc.alloc.rate.norm     avgt   20   16,000 ±  14,255    B/op

Java 9

Benchmark                                                                           Mode  Cnt   Score    Error   Units
ContainsInEmptyHashSetBenchmark._measureSmartListContainsAll                        avgt  200   4,532 ?  0,026   ns/op
ContainsInEmptyHashSetBenchmark.measureSmartListContainsAll                         avgt  200   5,079 ?  0,049   ns/op

Java 8

ContainsInEmptyHashSetBenchmark.measureContainsKeyIdeaHashMap    avgt  200  3,215 ± 0,022  ns/op
ContainsInEmptyHashSetBenchmark.measureContainsKeyJdkHashMap     avgt  200  3,545 ± 0,021  ns/op

ContainsInEmptyHashSetBenchmark.measureContainsValueIdeaHashMap  avgt  200  3,210 ± 0,018  ns/op
ContainsInEmptyHashSetBenchmark.measureContainsValueJdkHashMap   avgt  200  3,679 ± 0,114  ns/op

ContainsInEmptyHashSetBenchmark.measureGetFromIdeaHashMap        avgt  200  3,871 ± 0,041  ns/op
ContainsInEmptyHashSetBenchmark.measureGetFromJdkHashMap         avgt  200  4,186 ± 0,060  ns/op

ContainsInEmptyHashSetBenchmark.measureRemoveFromIdeaHashMap     avgt  200  3,700 ± 0,017  ns/op
ContainsInEmptyHashSetBenchmark.measureRemoveFromJdkHashMap      avgt  200  4,246 ± 0,029  ns/op

Java 9

ContainsInEmptyHashSetBenchmark.measureContainsKeyIdeaHashMap    avgt  200   3,049 ±  0,015   ns/op
ContainsInEmptyHashSetBenchmark.measureContainsKeyJdkHashMap     avgt  200   3,497 ±  0,018   ns/op

ContainsInEmptyHashSetBenchmark.measureContainsValueIdeaHashMap  avgt  200   3,018 ±  0,017   ns/op
ContainsInEmptyHashSetBenchmark.measureContainsValueJdkHashMap   avgt  200   3,364 ±  0,017   ns/op

ContainsInEmptyHashSetBenchmark.measureGetFromIdeaHashMap        avgt  200   3,524 ±  0,021   ns/op
ContainsInEmptyHashSetBenchmark.measureGetFromJdkHashMap         avgt  200   4,022 ±  0,029   ns/op

ContainsInEmptyHashSetBenchmark.measureRemoveFromIdeaHashMap     avgt  200   3,552 ±  0,078   ns/op
ContainsInEmptyHashSetBenchmark.measureRemoveFromJdkHashMap      avgt  200   4,033 ±  0,034   ns/op

--------------------- для доклада по малым оптимизациям

Java 9

Benchmark                                 Mode  Cnt   Score   Error  Units
MiscBenchmark.measureBooleanGetter        avgt  200   3,164 ± 0,033  ns/op
MiscBenchmark.measureNullabilityCheck     avgt  200   3,106 ± 0,042  ns/op
MiscBenchmark.measureContainsInHashSet    avgt  200   6,111 ± 0,090  ns/op
MiscBenchmark.measureContainsInArrayList  avgt  200  11,847 ± 0,124  ns/op

Java 8

Benchmark                                 Mode  Cnt   Score   Error  Units
MiscBenchmark.measureBooleanGetter        avgt  200   3,378 ? 0,106  ns/op
MiscBenchmark.measureNullabilityCheck     avgt  200   3,350 ? 0,090  ns/op
MiscBenchmark.measureContainsInHashSet    avgt  200   7,772 ? 0,738  ns/op
MiscBenchmark.measureContainsInArrayList  avgt  200  14,179 ? 1,189  ns/op


Java 8

Benchmark                                                           (size)  Mode  Cnt     Score     Error   Units

SubArrayBenchmark.measureSubArrayViaSubList                              5  avgt   20    37,915 ±   0,723   ns/op
SubArrayBenchmark.measureSubArrayViaArraysCopyOf                         5  avgt   20     7,711 ±   0,091   ns/op

SubArrayBenchmark.measureSubArrayViaSubList                             10  avgt   20    46,722 ±   1,043   ns/op
SubArrayBenchmark.measureSubArrayViaArraysCopyOf                        10  avgt   20     8,449 ±   0,217   ns/op

SubArrayBenchmark.measureSubArrayViaSubList                            100  avgt   20   125,830 ±   1,120   ns/op
SubArrayBenchmark.measureSubArrayViaArraysCopyOf                       100  avgt   20    41,890 ±   2,162   ns/op

SubArrayBenchmark.measureSubArrayViaSubList:·gc.alloc.rate.norm          5  avgt   20   128,000 ±   0,001    B/op
SubArrayBenchmark.measureSubArrayViaArraysCopyOf:·gc.alloc.rate.norm     5  avgt   20    24,000 ±   0,001    B/op

SubArrayBenchmark.measureSubArrayViaSubList:·gc.alloc.rate.norm         10  avgt   20   144,000 ±   0,001    B/op
SubArrayBenchmark.measureSubArrayViaArraysCopyOf:·gc.alloc.rate.norm    10  avgt   20    40,000 ±   0,001    B/op

SubArrayBenchmark.measureSubArrayViaSubList:·gc.alloc.rate.norm        100  avgt   20   320,000 ±   0,001    B/op
SubArrayBenchmark.measureSubArrayViaArraysCopyOf:·gc.alloc.rate.norm   100  avgt   20   216,000 ±   0,001    B/op

SubArrayBenchmark.measureSubListViaArraysAsList                          5  avgt   20    10,453 ±   0,249   ns/op
SubArrayBenchmark.measureSubListViaArraysCopyOf                          5  avgt   20    10,401 ±   0,404   ns/op

SubArrayBenchmark.measureSubListViaArraysAsList                         10  avgt   20    10,908 ±   0,631   ns/op
SubArrayBenchmark.measureSubListViaArraysCopyOf                         10  avgt   20    12,137 ±   0,577   ns/op

SubArrayBenchmark.measureSubListViaArraysAsList                        100  avgt   20    11,572 ±   0,805   ns/op
SubArrayBenchmark.measureSubListViaArraysCopyOf                        100  avgt   20    45,113 ±   0,955   ns/op

SubArrayBenchmark.measureSubListViaArraysAsList:·gc.alloc.rate.norm      5  avgt   20    56,000 ±   0,001    B/op
SubArrayBenchmark.measureSubListViaArraysCopyOf:·gc.alloc.rate.norm      5  avgt   20    48,000 ±   0,001    B/op

SubArrayBenchmark.measureSubListViaArraysAsList:·gc.alloc.rate.norm     10  avgt   20    56,000 ±   0,001    B/op
SubArrayBenchmark.measureSubListViaArraysCopyOf:·gc.alloc.rate.norm     10  avgt   20    64,000 ±   0,001    B/op

SubArrayBenchmark.measureSubListViaArraysAsList:·gc.alloc.rate.norm    100  avgt   20    56,000 ±   0,001    B/op
SubArrayBenchmark.measureSubListViaArraysCopyOf:·gc.alloc.rate.norm    100  avgt   20   240,000 ±   0,001    B/op

Java 9