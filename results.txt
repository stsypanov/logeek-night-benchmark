25.10.2017

JDK 8 / JRE 8

Benchmark                                       								Mode  Cnt    Score     Error   Units
MergeBenchmark.measureModifyCallingSave         								avgt  500  150,972 	 ± 2,859   us/op
MergeBenchmark.measureModifyWithoutCallingSave  								avgt  500  139,684 	 ± 1,320   us/op

MergeBenchmark.measureModifyCallingSave:·gc.alloc.rate.norm                     avgt  500  45530,392 ± 20,149  B/op
MergeBenchmark.measureModifyWithoutCallingSave:·gc.alloc.rate.norm              avgt  500  43245,317 ± 13,598  B/op

JDK 8 / JRE 8

-f 10 -wi 20 -m 50

Benchmark                                          (count)  Mode  Cnt     Score    Error  Units
ArrayCopyBenchmark.measureArraysCopyOf                   1  avgt  500    10,609 ±  0,107  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForEach        1  avgt  500    18,774 ±  0,115  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForI           1  avgt  500    18,828 ±  0,131  ns/op
ArrayCopyBenchmark.measureClone                          1  avgt  500    11,342 ±  0,088  ns/op

ArrayCopyBenchmark.measureArraysCopyOf                   5  avgt  500    10,767 ±  0,095  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForEach        5  avgt  500    23,968 ±  0,155  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForI           5  avgt  500    22,832 ±  0,133  ns/op
ArrayCopyBenchmark.measureClone                          5  avgt  500    11,277 ±  0,088  ns/op

ArrayCopyBenchmark.measureArraysCopyOf                  10  avgt  500    11,974 ±  0,182  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForEach       10  avgt  500    25,223 ±  0,175  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForI          10  avgt  500    24,131 ±  0,173  ns/op
ArrayCopyBenchmark.measureClone                         10  avgt  500    12,142 ±  0,098  ns/op

ArrayCopyBenchmark.measureArraysCopyOf                  20  avgt  500    14,316 ±  0,708  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForEach       20  avgt  500    26,220 ±  0,176  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForI          20  avgt  500    25,691 ±  0,176  ns/op
ArrayCopyBenchmark.measureClone                         20  avgt  500    13,041 ±  0,117  ns/op

ArrayCopyBenchmark.measureArraysCopyOf                  50  avgt  500    19,393 ±  0,154  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForEach       50  avgt  500    33,719 ±  0,256  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForI          50  avgt  500    34,939 ±  0,279  ns/op
ArrayCopyBenchmark.measureClone                         50  avgt  500    17,747 ±  0,125  ns/op

ArrayCopyBenchmark.measureArraysCopyOf                 100  avgt  500    32,051 ±  0,223  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForEach      100  avgt  500    38,919 ±  0,337  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForI         100  avgt  500    41,394 ±  0,328  ns/op
ArrayCopyBenchmark.measureClone                        100  avgt  500    29,454 ±  0,149  ns/op

ArrayCopyBenchmark.measureArraysCopyOfWithForEach     1000  avgt  500   273,581 ±  1,805  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForI        1000  avgt  500   273,114 ±  1,772  ns/op
ArrayCopyBenchmark.measureArraysCopyOf                1000  avgt  500   255,063 ±  4,361  ns/op
ArrayCopyBenchmark.measureClone                       1000  avgt  500   253,063 ±  2,115  ns/op

ArrayCopyBenchmark.measureArraysCopyOf               10000  avgt  500  2455,143 ± 13,380  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForEach    10000  avgt  500  1891,878 ± 14,537  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForI       10000  avgt  500  1888,779 ± 13,804  ns/op
ArrayCopyBenchmark.measureClone                      10000  avgt  500  2480,795 ± 15,583  ns/op


-------------------------------------------------------------------------------------------------------------


JDK 8 / JRE 9

-f 10 -wi 20 -m 50

Benchmark                                          (count)  Mode  Cnt     Score    Error  Units
ArrayCopyBenchmark.measureArraysCopyOf                   1  avgt  500    11,166 ±  0,224  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForEach        1  avgt  500    12,671 ±  1,516  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForI           1  avgt  500     9,074 ±  0,106  ns/op
ArrayCopyBenchmark.measureClone                          1  avgt  500    11,601 ±  0,099  ns/op

ArrayCopyBenchmark.measureArraysCopyOf                   5  avgt  500    10,876 ±  0,207  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForEach        5  avgt  500    13,592 ±  0,269  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForI           5  avgt  500    12,439 ±  0,126  ns/op
ArrayCopyBenchmark.measureClone                          5  avgt  500    11,734 ±  0,113  ns/op

ArrayCopyBenchmark.measureArraysCopyOf                  10  avgt  500    11,844 ±  0,126  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForEach       10  avgt  500    14,695 ±  0,185  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForI          10  avgt  500    14,418 ±  0,159  ns/op
ArrayCopyBenchmark.measureClone                         10  avgt  500    12,421 ±  0,107  ns/op

ArrayCopyBenchmark.measureArraysCopyOf                  20  avgt  500    13,419 ±  0,451  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForEach       20  avgt  500    19,882 ±  0,403  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForI          20  avgt  500    18,855 ±  0,172  ns/op
ArrayCopyBenchmark.measureClone                         20  avgt  500    13,237 ±  0,108  ns/op

ArrayCopyBenchmark.measureArraysCopyOf                  50  avgt  500    20,792 ±  0,560  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForEach       50  avgt  500    34,059 ±  0,948  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForI          50  avgt  500    29,314 ±  0,251  ns/op
ArrayCopyBenchmark.measureClone                         50  avgt  500    18,576 ±  0,142  ns/op

ArrayCopyBenchmark.measureArraysCopyOf                 100  avgt  500    33,330 ±  0,848  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForEach      100  avgt  500    43,862 ±  0,394  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForI         100  avgt  500    42,662 ±  0,338  ns/op
ArrayCopyBenchmark.measureClone                        100  avgt  500    30,661 ±  0,157  ns/op

ArrayCopyBenchmark.measureArraysCopyOf                1000  avgt  500   299,060 ± 10,566  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForEach     1000  avgt  500   275,257 ±  4,603  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForI        1000  avgt  500   261,016 ±  1,976  ns/op
ArrayCopyBenchmark.measureClone                       1000  avgt  500   256,199 ±  1,160  ns/op

ArrayCopyBenchmark.measureArraysCopyOf               10000  avgt  500  2939,384 ± 73,870  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForEach    10000  avgt  500  1512,567 ± 34,683  ns/op
ArrayCopyBenchmark.measureArraysCopyOfWithForI       10000  avgt  500  1419,036 ± 13,950  ns/op
ArrayCopyBenchmark.measureClone                      10000  avgt  500  2564,621 ± 15,126  ns/op

-------------------------------------------------------------------------------------------------------------

27.10.2017

JDK 8 / JRE 9

-f 10 -wi 20 -m 50

Benchmark                                                     (collectionType)  (size)  Mode  Cnt      Score     Error  Units
IteratorFromStreamBenchmark.measureForEach                                list      10  avgt  500    397,899 ±   3,742  ns/op
IteratorFromStreamBenchmark.measureIteratorFromStream                     list      10  avgt  500    618,878 ±   6,864  ns/op
IteratorFromStreamBenchmark.measureIteratorFromCollectedList              list      10  avgt  500    479,987 ±   6,310  ns/op

IteratorFromStreamBenchmark.measureForEach                                list     100  avgt  500   3333,892 ±  33,167  ns/op
IteratorFromStreamBenchmark.measureIteratorFromStream                     list     100  avgt  500   5819,927 ± 160,011  ns/op
IteratorFromStreamBenchmark.measureIteratorFromCollectedList              list     100  avgt  500   4123,159 ±  57,694  ns/op

IteratorFromStreamBenchmark.measureForEach                                list    1000  avgt  500  35905,929 ± 358,069  ns/op
IteratorFromStreamBenchmark.measureIteratorFromStream                     list    1000  avgt  500  54665,916 ± 877,024  ns/op
IteratorFromStreamBenchmark.measureIteratorFromCollectedList              list    1000  avgt  500  45274,905 ± 927,043  ns/op

IteratorFromStreamBenchmark.measureForEach                                 set      10  avgt  500    492,351 ±  26,488  ns/op
IteratorFromStreamBenchmark.measureIteratorFromStream                      set      10  avgt  500    714,031 ±  11,948  ns/op
IteratorFromStreamBenchmark.measureIteratorFromCollectedList               set      10  avgt  500    556,542 ±   5,880  ns/op

IteratorFromStreamBenchmark.measureForEach                                 set     100  avgt  500   4555,108 ±  61,825  ns/op
IteratorFromStreamBenchmark.measureIteratorFromStream                      set     100  avgt  500   6156,478 ±  71,377  ns/op
IteratorFromStreamBenchmark.measureIteratorFromCollectedList               set     100  avgt  500   4860,118 ±  54,824  ns/op

IteratorFromStreamBenchmark.measureForEach                                 set    1000  avgt  500  54001,405 ± 955,434  ns/op
IteratorFromStreamBenchmark.measureIteratorFromStream                      set    1000  avgt  500  71602,788 ± 805,289  ns/op
IteratorFromStreamBenchmark.measureIteratorFromCollectedList               set    1000  avgt  500  57125,771 ± 586,272  ns/op

-------------------------------------------------------------------------------------------------------------

27.10.2017

JDK 8 / JRE 8

-f 10 -wi 20 -m 50

Benchmark                                             (count)  Mode  Cnt      Score     Error  Units
SetAddAllBenchmark.measureAddAllViaMethod                  10  avgt  500    230,978 ±   2,528  ns/op
SetAddAllBenchmark.measureAddAllViaUtilsAddAll             10  avgt  500    157,242 ±   2,069  ns/op
SetAddAllBenchmark.measureAddAllViaCollectionsAddAll       10  avgt  500    141,383 ±   2,125  ns/op

SetAddAllBenchmark.measureAddAllViaMethod                 100  avgt  500   2515,255 ±  22,154  ns/op
SetAddAllBenchmark.measureAddAllViaUtilsAddAll            100  avgt  500   1917,693 ±  20,533  ns/op
SetAddAllBenchmark.measureAddAllViaCollectionsAddAll      100  avgt  500   1837,411 ±  22,111  ns/op

SetAddAllBenchmark.measureAddAllViaMethod                1000  avgt  500  23647,743 ± 208,480  ns/op
SetAddAllBenchmark.measureAddAllViaUtilsAddAll           1000  avgt  500  17434,137 ± 256,017  ns/op
SetAddAllBenchmark.measureAddAllViaCollectionsAddAll     1000  avgt  500  17283,939 ± 181,051  ns/op

Каждый метод выполняется как отдельный БМ:

Benchmark                                             (count)  Mode  Cnt      Score     Error  Units
SetAddAllBenchmark.measureAddAllViaMethod                  10  avgt  500    282,224 ±   7,747  ns/op
SetAddAllBenchmark.measureAddAllViaMethod                 100  avgt  500   2973,791 ±  37,126  ns/op
SetAddAllBenchmark.measureAddAllViaMethod                1000  avgt  500  29377,079 ± 356,668  ns/op

Benchmark                                             (count)  Mode  Cnt      Score     Error  Units
SetAddAllBenchmark.measureAddAllViaCollectionsAddAll       10  avgt  500    172,077 ±   2,957  ns/op
SetAddAllBenchmark.measureAddAllViaCollectionsAddAll      100  avgt  500   1996,182 ±  18,654  ns/op
SetAddAllBenchmark.measureAddAllViaCollectionsAddAll     1000  avgt  500  18015,272 ± 156,627  ns/op

Benchmark                                             (count)  Mode  Cnt      Score     Error  Units
SetAddAllBenchmark.measureAddAllViaUtilsAddAll             10  avgt  500    177,535 ±   1,748  ns/op
SetAddAllBenchmark.measureAddAllViaUtilsAddAll            100  avgt  500   2115,596 ±  21,019  ns/op
SetAddAllBenchmark.measureAddAllViaUtilsAddAll           1000  avgt  500  18983,598 ± 183,482  ns/op

-------------------------------------------------------------------------------------------------------------

28.10.2017

JDK 8 / JRE 8

Дочерних сущностей нет. Каждый метод выполняется как отдельный БМ:

Benchmark                                                                 Mode  Cnt      Score       Error   Units
MergeBenchmark.measureModifyCallingSave                                   avgt   75    218,158 ±     7,144   us/op
MergeBenchmark.measureModifyCallingSave:·gc.alloc.rate.norm               avgt   75  56390,906 ±    40,427    B/op

Benchmark                                                                 Mode  Cnt      Score       Error   Units
MergeBenchmark.measureModifyWithoutCallingSave                            avgt   75    194,664 ±     6,843   us/op
MergeBenchmark.measureModifyWithoutCallingSave:·gc.alloc.rate.norm        avgt   75  53909,289 ±    42,828    B/op

Есть дочерняя сущность (@ManyToOne). Выполняем всё вместе:

-f 10 -wi 25 -m 100

Benchmark                                                                 Mode  Cnt      Score       Error   Units
MergeBenchmark.measureModifyCallingSave                                   avgt  1000    169,879 ?    0,799   us/op
MergeBenchmark.measureModifyCallingSave:·gc.alloc.rate.norm               avgt  1000  56310,147 ?   15,525    B/op

MergeBenchmark.measureModifyWithoutCallingSave                            avgt  1000    157,791 ?    0,367   us/op
MergeBenchmark.measureModifyWithoutCallingSave:·gc.alloc.rate.norm        avgt  1000  53843,984 ?    7,365    B/op

Есть дочерняя сущность (@ManyToOne). Каждый метод выполняется как отдельный БМ:

-f 10 -wi 25 -m 100

Benchmark                                                                 Mode   Cnt      Score      Error   Units
MergeBenchmark.measureModifyCallingSave                                   avgt  1000    192,661 ?    6,563   us/op
MergeBenchmark.measureModifyCallingSave:·gc.alloc.rate.norm               avgt  1000  56405,205 ?   15,219    B/op

Benchmark                                                                 Mode   Cnt      Score      Error   Units
MergeBenchmark.measureModifyWithoutCallingSave                            avgt  1000    166,671 ?    1,645   us/op
MergeBenchmark.measureModifyWithoutCallingSave:·gc.alloc.rate.norm        avgt  1000  53950,038 ?    9,270    B/op



Single entity (no associated entities)

Benchmark                                                                        Mode  Cnt     Score    Error  Units
MergeBenchmark.measureModifyCallingSave                                         thrpt  250  6685,743 ? 59,933  ops/s
MergeBenchmark.measureModifyWithoutCallingSave                                  thrpt  250  7174,665 ? 46,339  ops/s

MergeBenchmark.measureModifyCallingSave:·gc.alloc.rate.norm                      avgt  250  45662,979 ?   34,722    B/op
MergeBenchmark.measureModifyWithoutCallingSave:·gc.alloc.rate.norm               avgt  250  43389,307 ?   24,978    B/op


---------------------------------------------------------------------------------------------------------------------------

Many-To-One (1 child)

Benchmark                                                                        Mode  Cnt     Score       Error  Units
MergeBenchmark.measureModifyCallingSave                                         thrpt  250  6196,420  ?  227,393  ops/s
MergeBenchmark.measureModifyWithoutCallingSave                                  thrpt  250  7167,608  ?   51,598  ops/s

MergeBenchmark.measureModifyCallingSave:·gc.alloc.rate.norm                      avgt  250  45710,406 ?   31,620  B/op
MergeBenchmark.measureModifyWithoutCallingSave:·gc.alloc.rate.norm               avgt  250  43470,006 ?   33,582  B/op

----------------------------------------------------------------------------------------------------------------------------

One-to-Many (10 children)

Benchmark                                                                        Mode  Cnt     Score    Error  Units
MergeBenchmark.measureModifyCallingSave                                         thrpt  250  3806,259 ? 54,749  ops/s
MergeBenchmark.measureModifyWithoutCallingSave                                  thrpt  250  4161,794 ? 35,645  ops/s

MergeBenchmark.measureModifyCallingSave:·gc.alloc.rate.norm                      avgt  250  73141,790 ?    55,812    B/op
MergeBenchmark.measureModifyWithoutCallingSave:·gc.alloc.rate.norm               avgt  250  68077,917 ?    67,530    B/op




--------------------- для доклада


# Run complete. Total time: 00:59:42

Benchmark                                                         (entityCount)  Mode  Cnt        Score         Error   Units
LoopVsSingleCallBenchmark.findInLoop                                         10  avgt  250      482,838 ±       8,242   us/op
LoopVsSingleCallBenchmark.findWithSingleCall                                 10  avgt  250      206,817 ±       1,622   us/op

LoopVsSingleCallBenchmark.findInLoop                                        100  avgt  250     1821,789 ±      29,594   us/op
LoopVsSingleCallBenchmark.findWithSingleCall                                100  avgt  250      484,816 ±       2,411   us/op

LoopVsSingleCallBenchmark.findInLoop                                       1000  avgt  250    18405,569 ±     341,172   us/op
LoopVsSingleCallBenchmark.findWithSingleCall                               1000  avgt  250    14257,609 ±     157,939   us/op

LoopVsSingleCallBenchmark.findInLoop:·gc.alloc.rate.norm                     10  avgt  250   159757,489 ±     564,696    B/op
LoopVsSingleCallBenchmark.findWithSingleCall:·gc.alloc.rate.norm             10  avgt  250    83399,058 ±      70,414    B/op

LoopVsSingleCallBenchmark.findInLoop:·gc.alloc.rate.norm                    100  avgt  250   649154,209 ±     571,325    B/op
LoopVsSingleCallBenchmark.findWithSingleCall:·gc.alloc.rate.norm            100  avgt  250   239406,450 ±      18,958    B/op

LoopVsSingleCallBenchmark.findInLoop:·gc.alloc.rate.norm                   1000  avgt  250  6247215,835 ±    4014,127    B/op
LoopVsSingleCallBenchmark.findWithSingleCall:·gc.alloc.rate.norm           1000  avgt  250  8092149,046 ±   14124,061    B/op


Benchmark                                                                          Mode  Cnt      Score      Error   Units
LazyTransactionBenchmark.measureEagerTransaction                                   avgt  250     32,533 ±    0,323   us/op
LazyTransactionBenchmark.measureLazyTransaction                                    avgt  250      1,392 ±    0,022   us/op

LazyTransactionBenchmark.measureEagerTransaction:·gc.alloc.rate.norm               avgt  250  11889,645 ±    7,003    B/op
LazyTransactionBenchmark.measureLazyTransaction:·gc.alloc.rate.norm                avgt  250    520,001 ±    0,001    B/op


Benchmark                                                                                  Mode  Cnt     Score    Error   Units
CachedFormatterBenchmark.measureDateTimeFormatterWhenDateConverted                         avgt  500   384,858 ?  3,791   ns/op
CachedFormatterBenchmark.measureSimpleDateTimeFormatter                                    avgt  500  1106,523 ?  5,522   ns/op

CachedFormatterBenchmark.measureDateTimeFormatterWhenDateConverted:·gc.alloc.rate.norm     avgt  500   500,800 ?  0,948    B/op
CachedFormatterBenchmark.measureSimpleDateTimeFormatter:·gc.alloc.rate.norm                avgt  500  2016,001 ?  0,001    B/op


Benchmark                                                                                            Mode  Cnt     Score    Error   Units
CachedFormatterBenchmark.measureDateTimeFormatter                                                    avgt  250   203,277 ±  3,980   ns/op
CachedFormatterBenchmark.measureSimpleDateTimeFormatter                                              avgt  250   271,580 ±  4,002   ns/op
CachedFormatterBenchmark.measureDateTimeFormatterWhenDateConverted                                   avgt  250   323,640 ±  8,563   ns/op

CachedFormatterBenchmark.measureDateTimeFormatter:·gc.alloc.rate.norm                                avgt  250   288,000 ±  0,001    B/op
CachedFormatterBenchmark.measureSimpleDateTimeFormatter:·gc.alloc.rate.norm                          avgt  250   560,000 ±  0,001    B/op
CachedFormatterBenchmark.measureDateTimeFormatterWhenDateConverted:·gc.alloc.rate                    avgt  250   834,033 ± 12,614  MB/sec

JDK 9

Benchmark                                                                                 Mode   Cnt     Score    Error   Units
ContainsInEmptyHashSetBenchmark.measureClearCustomHashSet                                 avgt  1000     3,571 ?  0,009   ns/op
ContainsInEmptyHashSetBenchmark.measureClearJdkHashSet                                    avgt  1000     4,594 ?  0,029   ns/op

ContainsInEmptyHashSetBenchmark.measureContainsAllInCustomHashSet                         avgt  1000     3,367 ?  0,007   ns/op
ContainsInEmptyHashSetBenchmark.measureContainsAllInJdkHashSet                            avgt  1000     9,780 ?  0,226   ns/op

ContainsInEmptyHashSetBenchmark.measureContainsInCustomHashSet                            avgt  1000     3,345 ?  0,011   ns/op
ContainsInEmptyHashSetBenchmark.measureContainsInJdkHashSet                               avgt  1000     4,374 ?  0,014   ns/op

-------- memory --------

ContainsInEmptyHashSetBenchmark.measureClearCustomHashSet:·gc.alloc.rate.norm             avgt  1000    ? 10??             B/op
ContainsInEmptyHashSetBenchmark.measureClearJdkHashSet:·gc.alloc.rate.norm                avgt  1000    ? 10??             B/op

ContainsInEmptyHashSetBenchmark.measureContainsAllInCustomHashSet:·gc.alloc.rate.norm     avgt  1000    ? 10??             B/op
ContainsInEmptyHashSetBenchmark.measureContainsAllInJdkHashSet:·gc.alloc.rate.norm        avgt  1000    19,200 ?  1,002    B/op

ContainsInEmptyHashSetBenchmark.measureContainsInCustomHashSet:·gc.alloc.rate.norm        avgt  1000    ? 10??             B/op
ContainsInEmptyHashSetBenchmark.measureContainsInJdkHashSet:·gc.alloc.rate.norm           avgt  1000    ? 10??             B/op

JDK 8

Benchmark                                                          Mode   Cnt  Score   Error  Units
ContainsInEmptyHashSetBenchmark.measureClearCustomHashSet          avgt  1000  3,719 ? 0,023  ns/op
ContainsInEmptyHashSetBenchmark.measureClearJdkHashSet             avgt  1000  4,519 ? 0,014  ns/op

ContainsInEmptyHashSetBenchmark.measureContainsAllInCustomHashSet  avgt  1000  3,401 ? 0,013  ns/op
ContainsInEmptyHashSetBenchmark.measureContainsAllInJdkHashSet     avgt  1000  8,460 ? 0,092  ns/op

ContainsInEmptyHashSetBenchmark.measureContainsInCustomHashSet     avgt  1000  3,398 ? 0,009  ns/op
ContainsInEmptyHashSetBenchmark.measureContainsInJdkHashSet        avgt  1000  3,979 ? 0,012  ns/op